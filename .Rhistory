sd.y[i] <- (1/length(strategy_df$Id))*sqrt((strategy_df$RET.USD[i]- mean(strategy_df$RET.USD))^2)
}
sd.y <- as.numeric()
for(i in 1:10){
sd.y[i] <- (1/10)*sqrt((strategy_df$RET.USD[i]- mean(strategy_df$RET.USD))^2)
}
sd.y
View(mean_ret)
sd(1:2) ^ 2
sd(1:3) ^ 2
sd.y <- as.numeric()
for(i in 1:10){
sd.y[i] <- (1/10)*sqrt((strategy_df$RET.USD[i]- mean(strategy_df$RET.USD))^2)
}
sd.y
24.69284*sqrt(12)
24.69284/sqrt(12)
sd_ret <- aggregate(.~ ym,Id, data = sd_help,FUN = sd)
sd_ret <- aggregate(.~ ym, data = sd_help,FUN = sd)
mean_ret <- aggregate(.~ ym, data = sd_help,FUN = mean)
sd_ret <- aggregate(.~ Id, data = sd_help,FUN = sd)
sd_help <- subset(BRIC.monthly,select = c("Id","ym","RET.USD"))
sd_help <- na.omit(sd_help,cols = RET.USD) # may be deleted, if redundant
sd_ret <- aggregate(.~ Id, data = sd_help,FUN = sd)
mean_ret <- aggregate(.~ Id, data = sd_help,FUN = mean)
View(sd_ret)
View(mean_ret)
sd_ret <- aggregate(.~ c(Id,ym), data = sd_help,FUN = sd)
View(sd_ret)
mean_ret <- aggregate(.~ ym, data = sd_help,FUN = mean)
View(mean_ret)
mean_ret <- aggregate(.~ ym, data = sd_help,FUN = count.fields())
mean_ret <- aggregate(.~ ym, data = sd_help,FUN = count)
mean_ret <- aggregate(.~ ym, data = sd_help,FUN = sum)
View(mean_ret)
mean_ret <- aggregate(.~ ym, data = sd_help,FUN = country_mcap)
mean_ret <- aggregate(.~ ym, data = sd_help,FUN = nrow())
mean_ret <- aggregate(.~ ym, data = sd_help,FUN = nrow)
View(mean_ret)
mean_ret <- aggregate(.~ ym, data = sd_help,FUN = count)
mean_ret <- aggregate(.~ ym, data = sd_help,FUN = count(Id))
library(dplyr)
mean_ret <- aggregate(.~ ym, data = sd_help,FUN = count)
mean_ret <- aggregate(.~ ym, data = sd_help,FUN = count(Id))
mean_ret <- aggregate(.~ ym, data = sd_help,FUN = count("Id"))
mean_ret <- aggregate(.~ ym, data = sd_help,FUN = count(sd_help$Id))
mean_ret <- aggregate(.~ ym, data = sd_help,FUN = NROW)
View(mean_ret)
sd_help %>% count(ym, sort = TRUE)
number_of_stocks <- aggregate(.~ ym, data = sd_help,FUN = NROW,sort = TRUE)
sd_help %>% count(ym)
number_of_stocks <- aggregate(.~ ym, data = sd_help,FUN = NROW)
mean_return <- aggregate(.~ ym, data = sd_help,FUN = mean)
sd_help %>% count(ym)
View(mean_ret)
dummyy <- aggregate(.~ ym, data = sd_help, FUN = NROW)
View(testy)
#install.packages("plm")
library(plm)
library(dplyr)
strategy_df <- pdata.frame(BRIC.monthly,index = c("Id","ym"))
# calculate sd of return by ym
sd_help <- subset(BRIC.monthly,select = c("Id","ym","RET.USD"))
sd_help <- na.omit(sd_help,cols = RET.USD) # may be deleted, if redundant
# monthly basis
number_of_stocks <- aggregate(.~ ym, data = sd_help,FUN = NROW) # alternative: sd_help %>% count(ym)
mean_return <- aggregate(.~ ym, data = sd_help,FUN = mean)
dummyy <- aggregate(.~ ym, data = sd_help, FUN = NROW)
plot(sd_ret$ym,sd_ret$RET.USD)
plot(mean_ret$ym,mean_ret$RET.USD)
# yearly basis
plot(mean_ret$ym,mean_ret$RET.USD)
plot(mean_return$ym,mean_return$RET.USD)
View(mean_return)
plot(dummyy$ym,dummyy$RET.USD)
plot(mean_return$ym,mean_return$RET.USD)
View(dummyy)
View(number_of_stocks)
number_of_stocks <- aggregate(.~ ym, data = sd_help,FUN = NROW(Id),sum(RET.USD)) # alternative: sd_help %>% count(ym)
number_of_stocks <- aggregate(.~ ym, data = sd_help,FUN = NROW("Id"),sum("RET.USD")) # alternative: sd_help %>% count(ym)
number_of_stocks <- aggregate(.~ ym, data = sd_help,FUN = NROW) # alternative: sd_help %>% count(ym)
dummyy <- aggregate(.~ ym, data = sd_help, FUN = NROW(Id))
dummyy <- aggregate(.~ ym, data = sd_help, FUN = NROW(x))
dummyy <- aggregate(.~ ym, data = sd_help, FUN = NROW(Id+RET.USD))
dummy <- aggregate(RET.USD ~ ym, data = sd_help, FUN = mean)
View(dummyy)
View(dummy)
View(mean_return)
mean_return <- aggregate(RET.USD ~ ym, data = sd_help,FUN = mean)
dummy <- aggregate(RET.USD ~ ym + Id, data = sd_help, FUN = mean)
View(mean_return)
View(dummy)
dummy <- aggregate(RET.USD ~ ym + Id, data = sd_help, FUN = sd)
View(dummy)
mean_return <- aggregate(RET.USD ~ ym, data = sd_help,FUN = var)
View(mean_return)
mean_return <- aggregate(RET.USD ~ ym, data = sd_help,FUN = mean)
mean_return <- aggregate(RET.USD ~ ym, data = sd_help,FUN = mean)
memory.limit(9999999999)
mean_return <- aggregate(RET.USD ~ ym, data = sd_help,FUN = mean)
dummy <- sd_help %>%
group_by(ym) %>%
summarize(mean(RET.USD))
View(dummy)
View(mean_return)
dummy <- sd_help %>%
group_by(ym) %>%
dummy$NEW <- summarize(mean(RET.USD))
dummy <- sd_help %>%
group_by(ym) %>%
dummy$NEW <- summarize(mean(sd_help$RET.USD))
dummy <- sd_help %>%
group_by(ym) %>%
summarize(mean(RET.USD))
dummy <- sd_help %>%
group_by(ym) %>%
summarize(mean(RET.USD),median(RET.USD))
View(dummy)
dummy <- sd_help %>%
group_by(ym) %>%
summarize(mean(RET.USD),median(RET.USD),sd(RET.USD))
dummy <- sd_help %>%
group_by(ym) %>%
summarize(mean(RET.USD),median(RET.USD),NROW(ID),sd(RET.USD))
dummy <- sd_help %>%
group_by(ym) %>%
summarize(mean(RET.USD),median(RET.USD),NROW(Id),sd(RET.USD))
View(dummy)
dummy <- sd_help %>%
group_by(ym) %>%
summarize(mean(RET.USD),median(RET.USD),NROW(Id),sd(RET.USD))
`colnames<-`("ym","Mean","Median","n","Sd")
dummy <- sd_help %>%
group_by(ym) %>%
summarize(mean(RET.USD),median(RET.USD),NROW(Id),sd(RET.USD))
colnames<-c("ym","Mean","Median","n","Sd")
View(dummy)
dummy <- sd_help %>%
group_by(ym) %>%
summarize(mean(RET.USD),median(RET.USD),NROW(Id),sd(RET.USD))
colnames(dummy) <- c("ym","Mean","Median","n","Sd")
View(sd_help)
dummy <- sd_help %>%
group_by(ym) %>%
summarize(mean(RET.USD),median(RET.USD),NROW(Id))
colnames(dummy) <- c("ym","Mean","Median","n")
View(dummy)
sd_help_new <- inner_join(sd_help,x,by=ym)
sd_help_new <- inner_join(sd_help,dummy,by=ym)
sd_help_new <- inner_join(sd_help,dummy,by="ym")
View(sd_help_new)
sd_return <- aggregate(RET.USD ~ ym, data = sd_help, FUN = sd)
dummy <- sd_help %>%
group_by(ym) %>%
summarize(mean(RET.USD),median(RET.USD),NROW(Id),sd(RET.USD))
colnames(dummy) <- c("ym","Mean","Median","n","sd")
sd_help_new <- inner_join(sd_help,dummy,by="ym")
View(sd_help_new)
sd_help_new$variance <- (sd_help_new$RET.USD - sd_help_new$Mean)^2
View(sd_help_new)
sd_help_new$variance <- ((sd_help_new$RET.USD - sd_help_new$Mean)^2)
sd_help_new$SqrtDevOfStock <- ((sd_help_new$RET.USD - sd_help_new$Mean)^2)
sd_help_neww <- sd_help_new %>%
group_by(ym) %>%
summarize(sum(SqrtDevOfStock))
View(sd_help_neww)
sd_help_newww <- inner_join(dummy,sd_help_neww,by="ym")
View(sd_help_newww)
df3 <- inner_join(dummy,sd_help_neww,by="ym")
df1 <- inner_join(sd_help,dummy,by="ym")
# sample variance
df1$SqrtDevOfStock <- ((df1$RET.USD - df1$Mean)^2)
df2 <- df1 %>%
group_by(ym) %>%
summarize(sum(SqrtDevOfStock))
df3 <- inner_join(dummy,df2,by="ym")
View(df3)
df3$Variance <- (1/(1-df3$n))
df3$sdOtherCalc <- sqrt(df3$Variance)
View(df3)
df3$Variance <- (1/(df3$n-1))*df3$`sum(SqrtDevOfStock)`
df3$sdOtherCalc <- sqrt(df3$Variance)
df1$"(r(t)-μ)^2" <- ((df1$RET.USD - df1$Mean)^2)
View(df1)
df1$"r(t)-μ)^2" <- ((df1$RET.USD - df1$Mean)^2)
df2 <- df1 %>%
group_by(ym) %>%
summarize(sum("r(t)-μ)^2"))
df1$potOfRetMinMy <- ((df1$RET.USD - df1$Mean)^2)
df2 <- df1 %>%
group_by(ym) %>%
summarize(sum(potOfRetMinMy))
df3 <- inner_join(dummy,df2,by="ym")
df3$Variance <- (1/(df3$n-1))*df3$potOfRetMinMy
#install.packages("plm")
library(plm)
library(dplyr)
strategy_df <- pdata.frame(BRIC.monthly,index = c("Id","ym"))
# calculate sd of return by ym
sd_help <- subset(BRIC.monthly,select = c("Id","ym","RET.USD"))
sd_help <- na.omit(sd_help,cols = RET.USD) # may be deleted, if redundant
# monthly basis
number_of_stocks <- aggregate(.~ ym, data = sd_help,FUN = NROW) # alternative: sd_help %>% count(ym)
#install.packages("plm")
library(plm)
library(dplyr)
#strategy_df <- pdata.frame(BRIC.monthly,index = c("Id","ym"))
# calculate sd of return by ym
sd_help <- subset(BRIC.monthly,select = c("Id","ym","RET.USD"))
sd_help <- na.omit(sd_help,cols = RET.USD) # may be deleted, if redundant
# monthly basis
number_of_stocks <- aggregate(.~ ym, data = sd_help,FUN = NROW) # alternative: sd_help %>% count(ym)
mean_return <- aggregate(RET.USD ~ ym, data = sd_help,FUN = mean)
sd_return <- aggregate(RET.USD ~ ym, data = sd_help, FUN = sd)
dummy <- sd_help %>%
group_by(ym) %>%
summarize(mean(RET.USD),median(RET.USD),NROW(Id),sd(RET.USD))
colnames(dummy) <- c("ym","Mean","Median","n","sd")
df1 <- inner_join(sd_help,dummy,by="ym")
# sample variance
df1$potOfRetMinμ <- ((df1$RET.USD - df1$Mean)^2)
df2 <- df1 %>%
group_by(ym) %>%
summarize(sum(potOfRetMinμ))
df3 <- inner_join(dummy,df2,by="ym")
df3$Variance <- (1/(df3$n-1))*df3$potOfRetMinμ
View(df3)
View(df3)
#install.packages("plm")
library(plm)
library(dplyr)
#strategy_df <- pdata.frame(BRIC.monthly,index = c("Id","ym"))
# calculate sd of return by ym
sd_help <- subset(BRIC.monthly,select = c("Id","ym","RET.USD"))
sd_help <- na.omit(sd_help,cols = RET.USD) # may be deleted, if redundant
# monthly basis
number_of_stocks <- aggregate(.~ ym, data = sd_help,FUN = NROW) # alternative: sd_help %>% count(ym)
mean_return <- aggregate(RET.USD ~ ym, data = sd_help,FUN = mean)
sd_return <- aggregate(RET.USD ~ ym, data = sd_help, FUN = sd)
memory.limit(9999999999)
mean_return <- aggregate(RET.USD ~ ym, data = sd_help,FUN = mean)
sd_return <- aggregate(RET.USD ~ ym, data = sd_help, FUN = sd)
dummy <- sd_help %>%
group_by(ym) %>%
summarize(mean(RET.USD),median(RET.USD),NROW(Id),sd(RET.USD))
colnames(dummy) <- c("ym","Mean","Median","n","sd")
df1 <- inner_join(sd_help,dummy,by="ym")
# sample variance
df1$potOfRetMinμ <- ((df1$RET.USD - df1$Mean)^2)
df2 <- df1 %>%
group_by(ym) %>%
summarize(sum(potOfRetMinμ))
colnames <- c("ym","Mean","Median","n","sd","SumPotOfRetMinμ")
df3 <- inner_join(dummy,df2,by="ym")
df3$Variance <- (1/(df3$n-1))*(df3$SumPotOfRetMinμ)
View(df3)
View(df3)
View(df2)
colnames(df3) <- c("ym","Mean","Median","n","sd","SumPotOfRetMinμ")
View(df3)
df3$Variance <- (1/(df3$n-1))*(df3$SumPotOfRetMinμ)
df3$sdOtherCalc <- sqrt(df3$Variance)
View(df3)
dummy <- sd_help %>%
group_by(ym) %>%
summarize(mean(RET.USD),median(RET.USD),NROW(Id),sd(RET.USD))
colnames(dummy) <- c("ym","Mean","Median","n","σ")
df1 <- inner_join(sd_help,dummy,by="ym")
# sample variance
df1$potOfRetMinμ <- ((df1$RET.USD - df1$Mean)^2)
df2 <- df1 %>%
group_by(ym) %>%
summarize(sum(potOfRetMinμ))
df3 <- inner_join(dummy,df2,by="ym")
colnames(df3) <- c("ym","Mean","Median","n","σ","SumPotOfRetMinμ")
df3$Variance <- (1/(df3$n-1))*(df3$SumPotOfRetMinμ)
df3$σ_OtherCalc <- sqrt(df3$Variance)
plot(mean_return$ym,mean_return$RET.USD)
View(df3)
dummy <- sd_help %>%
group_by(ym) %>%
summarize(mean(RET.USD),median(RET.USD),NROW(Id),sd(RET.USD))
colnames(dummy) <- c("ym","Mean","Median","n","sd")
df1 <- inner_join(sd_help,dummy,by="ym")
# sample variance
df1$potOfRetMinμ <- ((df1$RET.USD - df1$Mean)^2)
df2 <- df1 %>%
group_by(ym) %>%
summarize(sum(potOfRetMinμ))
df3 <- inner_join(dummy,df2,by="ym")
colnames(df3) <- c("ym","Mean","Median","n","sd","SumPotOfRetMinμ")
df3$Variance <- (1/(df3$n-1))*(df3$SumPotOfRetMinμ)
df3$sd_OtherCalc <- sqrt(df3$Variance)
plot(mean_return$ym,mean_return$RET.USD)
View(df3)
View(BRIC.monthly)
View(df3)
df4 <- inner_join(sd_return,df3,by = "ym")
View(df4)
df4 <- inner_join(sd_help,df3,by = "ym")
View(df4)
df4$Covariance <- cov(df4$RET.USD,df4$Mean)
View(df4)
var_return <- aggregate(RET.USD ~ ym, data = sd_help, FUN = var)
View(var_return)
View(df3)
#install.packages("plm")
library(plm)
library(dplyr)
#strategy_df <- pdata.frame(BRIC.monthly,index = c("Id","ym"))
# calculate sd of return by ym
sd_help <- subset(BRIC.monthly,select = c("Id","ym","RET.USD"))
sd_help <- na.omit(sd_help,cols = RET.USD) # may be deleted, if redundant
# monthly basis
number_of_stocks <- aggregate(.~ ym, data = sd_help,FUN = NROW) # alternative: sd_help %>% count(ym)
mean_return <- aggregate(RET.USD ~ ym, data = sd_help,FUN = mean)
sd_return <- aggregate(RET.USD ~ ym, data = sd_help, FUN = sd)
var_return <- aggregate(RET.USD ~ ym, data = sd_help, FUN = var)
dummy <- sd_help %>%
group_by(ym) %>%
summarize(mean(RET.USD),median(RET.USD),NROW(Id),sd(RET.USD),var(RET.USD))
colnames(dummy) <- c("ym","Mean","Median","n","sd","var")
df1 <- inner_join(sd_help,dummy,by="ym")
# sample variance
df1$potOfRetMinμ <- ((df1$RET.USD - df1$Mean)^2)
df2 <- df1 %>%
group_by(ym) %>%
summarize(sum(potOfRetMinμ))
df3 <- inner_join(dummy,df2,by="ym")
colnames(df3) <- c("ym","Mean","Median","n","sd","var","SumPotOfRetMinμ")
df3$var_OtherCalc <- (1/(df3$n-1))*(df3$SumPotOfRetMinμ)
df3$sd_OtherCalc <- sqrt(df3$var_OtherCalc)
df4 <- inner_join(sd_help,df3,by = "ym")
df4$Covariance <- cov(df4$RET.USD,df4$Mean)
plot(mean_return$ym,mean_return$RET.USD)
# yearly basis
View(df4)
View(df4)
View(df4)
View(BRIC.monthly)
memory.limit(9999999999)
# loading R.data BRIC monthly
load("C:/Users/johan/Documents/BRIC_Asset_Pricing_Project/BRIC_monthly.RData")
# loading R.data BRIC monthly
load("C:/Users/johan/Documents/BRIC_Asset_Pricing_Project/BRIC_static.RData")
# loading R.data BRIC monthly
load("C:/Users/johan/Documents/BRIC_Asset_Pricing_Project/BRIC_yearly.RData")
BRIC.monthly.raw <- BRIC.monthly
BRIC.yearly.raw <- BRIC.yearly
#1 adjust date range (from July 1994 on)
#1.1 leave raw data with date adjustment
BRIC.monthly.withNA <- subset(BRIC.monthly.raw, Date >= "1994-06-30" & Date <= "2019-01-01")
BRIC.yearly.withNA <- subset(BRIC.yearly.raw, YEAR >= "1994" & YEAR <= "2019")
#1.2 working dataframe
BRIC.monthly <- subset(BRIC.monthly, Date >= "1994-06-30" & Date <= "2019-01-01")
BRIC.yearly <- subset(BRIC.yearly, YEAR >= "1994" & YEAR <= "2019")
BRIC.monthly <- na.omit(BRIC.monthly,cols = "RET.USD","MV","MV.USD")
BRIC.yearly <- na.omit(BRIC.yearly,cols = "WC03501")
View(BRIC.yearly_helper)
#2 delete na's
#2.1 monthly data
# no RET.USD data, no MV or no MV.USD
BRIC.monthly <- na.omit(BRIC.monthly,cols = "RET.USD","MV","MV.USD")
#2.2 yearly data
# no WC03501 (Common equity)
BRIC.yearly <- na.omit(BRIC.yearly,cols = "WC03501")
# set WC03263 (deferred taxes) zero if NA
replace(BRIC.yearly$WC03263,is.na(BRIC.yearly$WC03263),0)
View(BRIC.yearly)
BRIC.monthly.raw <- BRIC.monthly
BRIC.yearly.raw <- BRIC.yearly
#1 adjust date range (from July 1994 on)
#1.1 leave raw data with date adjustment
BRIC.monthly.withNA <- subset(BRIC.monthly.raw, Date >= "1994-06-30" & Date <= "2019-01-01")
BRIC.yearly.withNA <- subset(BRIC.yearly.raw, YEAR >= "1994" & YEAR <= "2019")
#1.2 working dataframe
BRIC.monthly <- subset(BRIC.monthly, Date >= "1994-06-30" & Date <= "2019-01-01")
BRIC.yearly <- subset(BRIC.yearly, YEAR >= "1994" & YEAR <= "2019")
View(BRIC.yearly)
load("C:/Users/johan/Documents/BRIC_Asset_Pricing_Project/BRIC_monthly.RData")
# loading R.data BRIC monthly
load("C:/Users/johan/Documents/BRIC_Asset_Pricing_Project/BRIC_static.RData")
# loading R.data BRIC monthly
load("C:/Users/johan/Documents/BRIC_Asset_Pricing_Project/BRIC_yearly.RData")
BRIC.monthly.raw <- BRIC.monthly
BRIC.yearly.raw <- BRIC.yearly
#1 adjust date range (from July 1994 on)
#1.1 leave raw data with date adjustment
BRIC.monthly.withNA <- subset(BRIC.monthly.raw, Date >= "1994-06-30" & Date <= "2019-01-01")
BRIC.yearly.withNA <- subset(BRIC.yearly.raw, YEAR >= "1994" & YEAR <= "2019")
#1.2 working dataframe
BRIC.monthly <- subset(BRIC.monthly, Date >= "1994-06-30" & Date <= "2019-01-01")
BRIC.yearly <- subset(BRIC.yearly, YEAR >= "1994" & YEAR <= "2019")
#2 delete na's
#2.1 monthly data
# no RET.USD data, no MV or no MV.USD
BRIC.monthly <- na.omit(BRIC.monthly,cols = "RET.USD","MV","MV.USD")
BRIC.yearly <- na.omit(BRIC.yearly,cols = "WC03501")
View(BRIC.yearly)
load("C:/Users/johan/Documents/BRIC_Asset_Pricing_Project/BRIC_yearly.RData")
BRIC.yearly.raw <- BRIC.yearly
BRIC.yearly.withNA <- subset(BRIC.yearly.raw, YEAR >= "1994" & YEAR <= "2019")
BRIC.yearly <- subset(BRIC.yearly, YEAR >= "1994" & YEAR <= "2019")
View(BRIC.yearly)
BRIC.yearly.ne <- na.omit(BRIC.yearly,cols = "WC03501")
BRIC.yearly.ne <- na.omit(BRIC.yearly,cols = "WC03501 ")
BRIC.yearly.ne <- is.na(BRIC.yearly,cols = "WC03501")
BRIC.yearly.ne <- na.omit(BRIC.yearly,cols = "country")
BRIC.yearly.ne <- na.omit(BRIC.yearly)
BRIC.yearly.ne <- BRIC.yearly
BRIC.yearly.ne <- na.omit(BRIC.yearly,cols = BRIC.yearly$WC03501)
View(BRIC.yearly.ne)
View(BRIC.monthly)
memory.limit(9999999999)
# loading R.data BRIC monthly
load("C:/Users/johan/Documents/BRIC_Asset_Pricing_Project/BRIC_monthly.RData")
# loading R.data BRIC monthly
load("C:/Users/johan/Documents/BRIC_Asset_Pricing_Project/BRIC_static.RData")
# loading R.data BRIC monthly
load("C:/Users/johan/Documents/BRIC_Asset_Pricing_Project/BRIC_yearly.RData")
library(tidyverse)
# loading libraries
library(data.table) # extension of the data.frame package. It is widely used for fast aggregation of large datasets, low latency add/update/remove of columns, quicker ordered joins, and a fast file reader.
library(dplyr) # data manipulation package
library(lubridate)
library(zoo) # methods for totally ordered indexed observations. It aims at performing calculations containing irregular time series of numeric vectors, matrices & factors
library(stats)
library(utils)
library(tidyverse)
BRIC.monthly.raw <- BRIC.monthly
BRIC.yearly.raw <- BRIC.yearly
#1 adjust date range (from July 1994 on)
#1.1 leave raw data with date adjustment
BRIC.monthly.withNA <- subset(BRIC.monthly.raw, Date >= "1994-06-30" & Date <= "2019-01-01")
BRIC.yearly.withNA <- subset(BRIC.yearly.raw, YEAR >= "1994" & YEAR <= "2019")
#1.2 working dataframe
BRIC.monthly <- subset(BRIC.monthly, Date >= "1994-06-30" & Date <= "2019-01-01")
BRIC.yearly <- subset(BRIC.yearly, YEAR >= "1994" & YEAR <= "2019")
BRIC.monthly %>%
drop_na(RET.USD)
BRIC.monthly <- BRIC.monthly %>%
drop_na(RET.USD)
BRIC.monthly <- BRIC.monthly %>%
drop_na(RET.USD)
summary(BRIC.monthly)
BRIC.monthly <- BRIC.monthly %>%
drop_na(RET.USD)
drop_na(MV)
BRIC.monthly <- BRIC.monthly %>%
drop_na(RET.USD)
drop_na(MV.USD)
BRIC.monthly <- BRIC.monthly %>%
drop_na(RET.USD,MV.USD)
summary(BRIC.monthly)
BRIC.monthly <- BRIC.monthly %>%
drop_na(RET.USD,MV,MV.USD)
BRIC.yearly %>%
drop_na(WC03501)
BRIC.yearly <- BRIC.yearly %>%
drop_na(WC03501)
replace(BRIC.yearly$WC03263,is.na(BRIC.yearly$WC03263),0)
View(BRIC.yearly)
summary(BRIC.yearly)
summary(BRIC.yearly$WC03501)
summary(BRIC.yearly)
BRIC.yearly.test <- BRIC.yearly %>%
mutate_at(WC03263,~replace_na(WC03263,0))
BRIC.yearly.test <- BRIC.yearly %>%
replace_na(WC03263,0)
BRIC.yearly.test <- BRIC.yearly %>%
mutate_at(BRIC.yearly$WC03263,~replace_na(BRIC.yearly$WC03263,0))
BRIC.yearly.test <- BRIC.yearly %>%
mutate_at(BRIC.yearly$WC03263,~replace_na(BRIC.yearly$WC03263,"0"))
BRIC.yearly.test <- BRIC.yearly %>%
mutate_at(BRIC.yearly$WC03263,~replace_na(WC03263,0))
BRIC.yearly$WC03263 <- replace_na(0)
summary(BRIC.yearly)
View(BRIC.yearly)
View(BRIC.yearly_helper)
View(BRIC.yearly.raw)
load("C:/Users/johan/Documents/BRIC_Asset_Pricing_Project/BRIC_yearly.RData")
BRIC.yearly.raw <- BRIC.yearly
BRIC.yearly.withNA <- subset(BRIC.yearly.raw, YEAR >= "1994" & YEAR <= "2019")
BRIC.yearly <- subset(BRIC.yearly, YEAR >= "1994" & YEAR <= "2019")
BRIC.yearly <- BRIC.yearly %>%
drop_na(WC03501)
View(BRIC.yearly)
BRIC.yearly$WC03263 %>% replace_na(0)
summary(BRIC.yearly)
BRIC.yearly <- BRIC.yearly$WC03263 %>% replace_na(0)
summary(BRIC.yearly)
load("C:/Users/johan/Documents/BRIC_Asset_Pricing_Project/BRIC_yearly.RData")
BRIC.yearly.raw <- BRIC.yearly
BRIC.yearly.withNA <- subset(BRIC.yearly.raw, YEAR >= "1994" & YEAR <= "2019")
BRIC.yearly <- subset(BRIC.yearly, YEAR >= "1994" & YEAR <= "2019")
BRIC.yearly <- BRIC.yearly %>%
drop_na(WC03501)
BRIC.yearly$WC03263 <- BRIC.yearly$WC03263 %>% replace_na(0)
View(BRIC.yearly)
summary(BRIC.yearly)
BRIC.yearly$BookValue <- BRIC.yearly$WC03501 + WC03263
BRIC.yearly$BookValue <- BRIC.yearly$WC03501 + BRIC.yearly$WC03263
View(BRIC.yearly)
summary(BRIC.yearly)
BRIC.yearly[BRIC.yearly$BookValue >= 0,]
BRIC.yearly <- BRIC.yearly[BRIC.yearly$BookValue >= 0,]
summary(BRIC.yearly)
View(BRIC.yearly)
BRIC.yearly_helper <- subset( BRIC.yearly, select = c("Id","country","ICBSUC","YEAR","WC03501","WC01001","WC01051","WC01101","WC01251","WC02999","BookValue") )
BRIC.yearly <- subset( BRIC.yearly, select = c("Id","country","ICBSUC","YEAR","WC03501","WC01001","WC01051","WC01101","WC01251","WC02999","BookValue") )
summary(BRIC.yearly)
load("C:/Users/johan/Documents/BRIC_Asset_Pricing_Project/BRIC_yearly.RData")

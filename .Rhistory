# clear workspace
##rm(list=ls())
getwd()
##setwd("/Users/Manu/Desktop/TUM_Master_Mgt_Technology/TUM_SS_21/Empirical Asset Pricing seminar/Seminar Thesis")
# loading libraries
library(data.table) # extension of the data.frame package. It is widely used for fast aggregation of large datasets, low latency add/update/remove of columns, quicker ordered joins, and a fast file reader.
library(dplyr) # data manipulation package
library(lubridate)
library(zoo) # methods for totally ordered indexed observations. It aims at performing calculations containing irregular time series of numeric vectors, matrices & factors
library(stats)
# loading R.data BRIC monthly
load("/Users/Manu/Desktop/TUM_Master_Mgt_Technology/TUM_SS_21/Empirical Asset Pricing seminar/Seminar Thesis/BRIC/BRIC_monthly.RData")
# loading R.data BRIC monthly
load("/Users/Manu/Desktop/TUM_Master_Mgt_Technology/TUM_SS_21/Empirical Asset Pricing seminar/Seminar Thesis/BRIC/BRIC_monthly.RData")
setwd("/Users/Manu/Desktop/TUM_Master_Mgt_Technology/TUM_SS_21/Empirical Asset Pricing seminar/Seminar Thesis/BRIC_data")
# loading libraries
library(data.table) # extension of the data.frame package. It is widely used for fast aggregation of large datasets, low latency add/update/remove of columns, quicker ordered joins, and a fast file reader.
library(dplyr) # data manipulation package
library(lubridate)
library(zoo) # methods for totally ordered indexed observations. It aims at performing calculations containing irregular time series of numeric vectors, matrices & factors
library(stats)
# loading R.data BRIC monthly
load("/Users/Manu/Desktop/TUM_Master_Mgt_Technology/TUM_SS_21/Empirical Asset Pricing seminar/Seminar Thesis/BRIC/BRIC_monthly.RData")
# loading R.data BRIC monthly
load("/Users/Manu/Desktop/TUM_Master_Mgt_Technology/TUM_SS_21/Empirical Asset Pricing seminar/Seminar Thesis/BRIC_data/BRIC_monthly.RData")
# loading R.data BRIC monthly
load("/Users/Manu/Desktop/TUM_Master_Mgt_Technology/TUM_SS_21/Empirical Asset Pricing seminar/Seminar Thesis/BRIC_data/BRIC_static.RData")
# loading R.data BRIC monthly
load("/Users/Manu/Desktop/TUM_Master_Mgt_Technology/TUM_SS_21/Empirical Asset Pricing seminar/Seminar Thesis/BRIC_data/BRIC_yearly.RData")
# clear workspace
##rm(list=ls())
getwd()
setwd("/Users/Manu/Desktop/TUM_Master_Mgt_Technology/TUM_SS_21/Empirical Asset Pricing seminar/Seminar Thesis/BRIC_data")
# loading libraries
library(data.table) # extension of the data.frame package. It is widely used for fast aggregation of large datasets, low latency add/update/remove of columns, quicker ordered joins, and a fast file reader.
library(dplyr) # data manipulation package
library(lubridate)
library(zoo) # methods for totally ordered indexed observations. It aims at performing calculations containing irregular time series of numeric vectors, matrices & factors
library(stats)
# loading R.data BRIC monthly
load("/Users/Manu/Desktop/TUM_Master_Mgt_Technology/TUM_SS_21/Empirical Asset Pricing seminar/Seminar Thesis/BRIC_data/BRIC_monthly.RData")
# loading R.data BRIC monthly
load("/Users/Manu/Desktop/TUM_Master_Mgt_Technology/TUM_SS_21/Empirical Asset Pricing seminar/Seminar Thesis/BRIC_data/BRIC_static.RData")
# loading R.data BRIC monthly
load("/Users/Manu/Desktop/TUM_Master_Mgt_Technology/TUM_SS_21/Empirical Asset Pricing seminar/Seminar Thesis/BRIC_data/BRIC_yearly.RData")
str(BRIC.monthly)
str(BRIC.static)
str(BRIC.yearly)
head(BRIC.yearly)
str(BRIC.yearly)
head(BRIC.yearly)
BRIC.yearly_helper <- subset( BRIC.yearly, select = c("Id","country","ICBSUC","YEAR","WC03501","WC07210") )
BRIC.yearly_helper$BM <- BRIC.yearly_helper$WC03501 / BRIC.yearly_helper$WC07210
BRIC.yearly_helper
summary(BRIC.yearly_helper$BM)
summary(BRIC.yearly_helper$WC03501)
summary(BRIC.yearly_helper$WC07210)
summary(BRIC.yearly_helper$BM)
# clear workspace
##rm(list=ls())
getwd()
##setwd("/Users/Manu/Desktop/TUM_Master_Mgt_Technology/TUM_SS_21/Empirical Asset Pricing seminar/Seminar Thesis/BRIC_data")
# loading libraries
library(data.table) # extension of the data.frame package. It is widely used for fast aggregation of large datasets, low latency add/update/remove of columns, quicker ordered joins, and a fast file reader.
library(dplyr) # data manipulation package
library(lubridate)
library(zoo) # methods for totally ordered indexed observations. It aims at performing calculations containing irregular time series of numeric vectors, matrices & factors
library(stats)
library(utils)
# loading R.data BRIC monthly
load("/Users/Manu/Desktop/TUM_Master_Mgt_Technology/TUM_SS_21/Empirical Asset Pricing seminar/Seminar Thesis/BRIC_data/BRIC_monthly.RData")
# clear workspace
##rm(list=ls())
getwd()
##setwd("/Users/Manu/Desktop/TUM_Master_Mgt_Technology/TUM_SS_21/Empirical Asset Pricing seminar/Seminar Thesis/BRIC_data")
# loading libraries
library(data.table) # extension of the data.frame package. It is widely used for fast aggregation of large datasets, low latency add/update/remove of columns, quicker ordered joins, and a fast file reader.
library(dplyr) # data manipulation package
library(lubridate)
library(zoo) # methods for totally ordered indexed observations. It aims at performing calculations containing irregular time series of numeric vectors, matrices & factors
library(stats)
library(utils)
# loading R.data BRIC monthly
load("/Users/Manu/Desktop/TUM_Master_Mgt_Technology/TUM_SS_21/Empirical Asset Pricing seminar/Seminar Thesis/BRIC_data/BRIC_monthly.RData")
# loading R.data BRIC monthly
load("C:\Users\johan\Documents\BRIC_Asset_Pricing_Project/BRIC_monthly.RData")
# loading R.data BRIC monthly
load("Users\johan\Documents\BRIC_Asset_Pricing_Project/BRIC_monthly.RData")
# loading R.data BRIC monthly
load("Users\johan\Documents\BRIC_Asset_Pricing_Project/BRIC_monthly.RData")
# loading R.data BRIC monthly
load("Users\johan\Documents\BRIC_Asset_Pricing_Project/BRIC_monthly.RData")
# loading R.data BRIC monthly
load("C:/Users/johan/Documents/BRIC_Asset_Pricing_Project/BRIC_monthly.RData")
# loading R.data BRIC monthly
load("C:/Users/johan/Documents/BRIC_Asset_Pricing_Project/BRIC_static.RData")
# loading R.data BRIC monthly
load("C:/Users/johan/Documents/BRIC_Asset_Pricing_Project/BRIC_yearly.RData")
# save raw data
BRIC.monthly.raw <- BRIC.monthly
BRIC.monthly <- subset(BRIC.monthly, date> "1994-06-30" & date < "2019-01-01")
# save raw data
BRIC.monthly.raw <- BRIC.monthly
BRIC.monthly <- subset(BRIC.monthly, date >= "1994-06-30" & date < "2019-01-01")
View(BRIC.monthly)
# save raw data
BRIC.monthly.raw <- BRIC.monthly
BRIC.monthly <- subset(BRIC.monthly, Date >= "1994-06-30" & date < "2019-01-01")
# save raw data
BRIC.monthly.raw <- BRIC.monthly
BRIC.monthly <- subset(BRIC.monthly, Date >= "1994-06-30" & date =< "2019-01-01")
# save raw data
BRIC.monthly.raw <- BRIC.monthly
BRIC.monthly <- subset(BRIC.monthly, Date >= "1994-06-30" & date =< "2019-01-01")
# save raw data
BRIC.monthly.raw <- BRIC.monthly
BRIC.monthly <- subset(BRIC.monthly, Date >= "1994-06-30" & date < "2019-01-01")
# save raw data
BRIC.monthly.raw <- BRIC.monthly
BRIC.monthly <- subset(BRIC.monthly, Date >= "1994-06-30" & Date =< "2019-01-01")
# save raw data
BRIC.monthly.raw <- BRIC.monthly
BRIC.monthly <- subset(BRIC.monthly, Date >= "1994-06-30" & Date =< "2019-01-01")
# save raw data
BRIC.monthly.raw <- BRIC.monthly
BRIC.monthly <- subset(BRIC.monthly, Date >= "1994-06-30" & Date <= "2019-01-01")
# save raw data and adjust others to the required date range
BRIC.monthly.raw <- BRIC.monthly
BRIC.monthly <- subset(BRIC.monthly, Date >= "1994-06-30" & Date <= "2019-01-01")
BRIC.yearly.raw <- BRIC.yearly
BRIC.yearly <- subset(BRIC.yearly, YEAR >= "1994" & YEAR <= "2019")
# import csv
library(readr)
FFData <- read_csv("FF_Research_Data_5_Factors_2x3.CSV",
skip = 2)
# adding a ym column to risk free rate data
one_m_tbill <- as.data.frame(FFData[c("X1","RF")][1:693,])
one_m_tbill$ym<-as.yearmon(one_m_tbill$X1, "%Y %m")
# merge risk-free rate (1 month treasury bill rate) with monthly data
BRIC.monthly_new <- left_join(x = BRIC.monthly, y = one_m_tbill, by = "ym")
# remove NAs from our data
## NOTE: Problem with data where there's other data but not ret.usd data --> Confirm with Hanauer and Windm√ºller
BRIC.monthly_neww <- na.omit(BRIC.monthly_new)
# make rf column numeric
BRIC.monthly_neww$RF <- as.numeric(BRIC.monthly_neww$RF)
## Determine portfolio breakpoints for Size
# Fama-French take the MV from end-of-June and rebalance yearly
BRIC.monthly_neww[,month := month(Date)]
BRIC.monthly_neww[,year := year(Date)]
BRIC.monthly_neww[,hcjun := ifelse(month>=7,year,year-1)]
# determine size portfolio allocation from July on using data that's public from end-of-June on
setorder(BRIC.monthly_neww,Date,-MV.USD)
hlpvariable <-  BRIC.monthly_neww[month==7 & !is.na(MV.USD),
.(Size = ifelse((cumsum(MV.USD)/sum(MV.USD))>=0.9,"Small","Big"),Id),
by=year]
# Merge the size portfolio allocation back from July Y to June Y+1
panel_country <- merge(BRIC.monthly_neww,hlpvariable,
by.x=c("hcjun","Id"),
by.y=c("year","Id"),
all.x=T)
panel_country_noNA <- na.omit(panel_country)
# merge yearly BM data with our table
BRIC.yearly_helper <- subset( BRIC.yearly, select = c("Id","country","ICBSUC","YEAR","WC03501","WC07210") )
BRIC.yearly_helper$BM <- BRIC.yearly_helper$WC03501 / BRIC.yearly_helper$WC07210
summary(BRIC.yearly_helper$BM)
panel_country_BM <- left_join(x = panel_country_noNA,y = BRIC.yearly, by = "Id")
View(panel_country_noNA)
View(panel_country_noNA)
panel_country_BM <- left_join(x = panel_country_noNA,y = BRIC.yearly_helper, by = "Id")
View(BRIC.yearly_helper)
hlpvariable2 <- panel_country_BM[month==7 & !is.na(BM) & Size=="Big", .(bm_bb30 = quantile(BM , probs = c(0.3), na.rm=T),
bm_bb70 = quantile(BM , probs = c(0.7), na.rm=T)),by=year]
panel_country_noNA <- subset(c("hcjun","Id","country","MV.USD","RET.USD","ym","RF","month","year","Size"))
panel_country_noNA <- subset(panel_country_noNA, select = c("hcjun","Id","country","MV.USD","RET.USD","ym","RF","month","year","Size"))
View(panel_country_noNA)
panel_country_BM <- left_join(x = panel_country_noNA,y = BRIC.yearly_helper, by = "Id")
View(panel_country_BM)
View(panel_country_BM)
head(panel_country_BM)
BRIC.yearly_helper <- na.omit(BRIC.yearly_helper$BM)
BRIC.yearly_helper <- na.omit(BRIC.yearly_helper)
BRIC.yearly_helper <- na.omit(BRIC.yearly_helper)
BRIC.yearly_helper <- subset( BRIC.yearly, select = c("Id","country","ICBSUC","YEAR","WC03501","WC07210") )
BRIC.yearly_helper <- na.omit(BRIC.yearly_helper)
BRIC.yearly_helper$BM <- BRIC.yearly_helper$WC03501 / BRIC.yearly_helper$WC07210
View(BRIC.yearly_helper)
BRIC.yearly_helper <- subset( BRIC.yearly, select = c("Id","country","ICBSUC","YEAR","WC03501","WC07210") )
BRIC.yearly_helper <- na.omit(BRIC.yearly_helper,cols = "WC03501")
BRIC.yearly_helper$BM <- BRIC.yearly_helper$WC03501 / BRIC.yearly_helper$WC07210
# merge yearly BM data with our table
BRIC.yearly_helper <- subset( BRIC.yearly, select = c("Id","country","ICBSUC","YEAR","WC03501","WC07210") )
BRIC.yearly_helper$BM <- BRIC.yearly_helper$WC03501 / BRIC.yearly_helper$WC07210
# delete NA s from BM column
BRIC.yearly_helper <- na.omit(BRIC.yearly_helper,cols = "BM")
# merge yearly BM data with our table
BRIC.yearly_helper <- subset( BRIC.yearly, select = c("Id","country","ICBSUC","YEAR","WC03501","WC07210") )
BRIC.yearly_helper$BM <- BRIC.yearly_helper$WC03501 / BRIC.yearly_helper$WC07210
# delete NA s from BM column
test <- na.omit(BRIC.yearly_helper)
BRIC.yearly_helper <- na.omit(BRIC.yearly_helper,cols = "BM")
## Determine portfolio breakpoints for Size
# Fama-French take the MV from end-of-June and rebalance yearly
BRIC.monthly_neww[,month := month(Date)]
BRIC.monthly_neww[,year := year(Date)]
BRIC.monthly_neww[,hcjun := ifelse(month>=7,year,year-1)]
# determine size portfolio allocation from July on using data that's public from end-of-June on
setorder(BRIC.monthly_neww,Date,-MV.USD)
hlpvariable <-  BRIC.monthly_neww[month==7 & !is.na(MV.USD),
.(Size = ifelse((cumsum(MV.USD)/sum(MV.USD))>=0.9,"Small","Big"),Id),
by=year]
# Merge the size portfolio allocation back from July Y to June Y+1
panel_country <- merge(BRIC.monthly_neww,hlpvariable,
by.x=c("hcjun","Id"),
by.y=c("year","Id"),
all.x=T)
panel_country_noNA <- na.omit(panel_country,cols = "Size")
# merge yearly BM data with our table
BRIC.yearly_helper <- subset( BRIC.yearly, select = c("Id","country","ICBSUC","YEAR","WC03501","WC07210") )
BRIC.yearly_helper$BM <- BRIC.yearly_helper$WC03501 / BRIC.yearly_helper$WC07210
# delete NA s from BM column
BRIC.yearly_helper <- na.omit(BRIC.yearly_helper,cols = "BM")
summary(BRIC.yearly_helper$BM)
# eliminating unused columns
panel_country_noNA <- subset(panel_country_noNA, select = c("hcjun","Id","country","MV.USD","RET.USD","ym","RF","month","year","Size"))
panel_country_BM <- left_join(x = panel_country_noNA,y = BRIC.yearly_helper, by = "Id")
hlpvariable2 <- panel_country_BM[month==7 & !is.na(BM) & Size=="Big", .(bm_bb30 = quantile(BM , probs = c(0.3), na.rm=T),
bm_bb70 = quantile(BM , probs = c(0.7), na.rm=T)),by=year]
View(hlpvariable2)
panel_country_new <- merge(panel_country_BM,hlpvariable2,
by.x=c("hcjun"),
by.y=c("year"),
all.x=T)
View(hlpvariable2)
memory.limit(9999999999)
# Merge the B/M portfolio allocation back from July Y to June Y+1
# Merge the B/M portfolio allocation back from July Y to June Y+1
# Merge the B/M portfolio allocation back from July Y to June Y+1
# Merge the B/M portfolio allocation back from July Y to June Y+1
panel_country_new <- merge(panel_country_BM,hlpvariable2,
panel_country_new <- merge(panel_country_BM,hlpvariable2,
by.x=c("hcjun"),
by.y=c("year"),
all.x=T)
panel_country_new
# eliminating unused columns
panel_country_noNA <- subset(panel_country_noNA, select = c("hcjun","Id","country","MV.USD","RET.USD","ym","RF","month","year","Size"))
panel_country_BM <- left_join(x = panel_country_noNA,y = BRIC.yearly_helper, by = "Id")
# Determine the B/M breakpoints based on big stocks only
hlpvariable2 <- panel_country_BM[month==7 & !is.na(BM) & Size=="Big", .(bm_bb30 = quantile(BM , probs = c(0.3), na.rm=T),
bm_bb70 = quantile(BM , probs = c(0.7), na.rm=T)),by=year]
# Merge the B/M portfolio allocation back from July Y to June Y+1
memory.limit(9999999999)
panel_country_new <- merge(panel_country_BM,hlpvariable2,
by.x=c("hcjun"),
by.y=c("year"),
all.x=T)
panel_country_new
View(panel_country_new)
panel_country_new[ , pf.bm := ifelse(BM>bm_bb70,"High",ifelse((BM<=bm_bb70 & BM>bm_bb30),"Neutral",ifelse(BM<=bm_bb30,"Low",NA)))]
panel_country_new[, SIZE_VALUE := paste0(Size,".",pf.bm)]
View(panel_country_new)
View(panel_country_new)
panel_country_new
table(panel_country_new$SIZE_VALUE)
panel_country_BM <- join(x = panel_country_noNA,y = BRIC.yearly_helper, by = "Id")
panel_country_BM <- full_join(x = panel_country_noNA,y = BRIC.yearly_helper, by = "Id")
hlpvariable2 <- panel_country_BM[month==7 & !is.na(BM) & Size=="Big", .(bm_bb30 = quantile(BM , probs = c(0.3), na.rm=T),
bm_bb70 = quantile(BM , probs = c(0.7), na.rm=T)),by=year]
# Merge the B/M portfolio allocation back from July Y to June Y+1
panel_country_new <- merge(panel_country_BM,hlpvariable2,
by.x=c("hcjun"),
by.y=c("year"),
all.x=T)
panel_country_new[ , pf.bm := ifelse(BM>bm_bb70,"High",ifelse((BM<=bm_bb70 & BM>bm_bb30),"Neutral",ifelse(BM<=bm_bb30,"Low",NA)))]
panel_country_new[, SIZE_VALUE := paste0(Size,".",pf.bm)]
# get an overview
table(panel_country_new$SIZE_VALUE)
View(panel_country_new)
panel_country_new
panel_country_BM <- inner_join(x = panel_country_noNA,y = BRIC.yearly_helper, by = "Id")
head(panel_country_new)
## Determine portfolio breakpoints for Size
# Fama-French take the MV from end-of-June and rebalance yearly
BRIC.monthly_neww[,month := month(Date)]
BRIC.monthly_neww[,year := year(Date)]
BRIC.monthly_neww[,hcjun := ifelse(month>=7,year,year-1)]
# determine size portfolio allocation from July on using data that's public from end-of-June on
setorder(BRIC.monthly_neww,Date,-MV.USD)
hlpvariable <-  BRIC.monthly_neww[month==7 & !is.na(MV.USD),
.(Size = ifelse((cumsum(MV.USD)/sum(MV.USD))>=0.9,"Small","Big"),Id),
by=year]
# Merge the size portfolio allocation back from July Y to June Y+1
panel_country <- merge(BRIC.monthly_neww,hlpvariable,
by.x=c("hcjun","Id"),
by.y=c("year","Id"),
all.x=T)
panel_country_noNA <- na.omit(panel_country,cols = "Size")
# merge yearly BM data with our table
BRIC.yearly_helper <- subset( BRIC.yearly, select = c("Id","country","ICBSUC","YEAR","WC03501","WC07210") )
BRIC.yearly_helper$BM <- BRIC.yearly_helper$WC03501 / BRIC.yearly_helper$WC07210
# delete NA s from BM column
BRIC.yearly_helper <- na.omit(BRIC.yearly_helper,cols = "BM")
summary(BRIC.yearly_helper$BM)
# eliminating unused columns
panel_country_noNA <- subset(panel_country_noNA, select = c("hcjun","Id","country","MV.USD","RET.USD","ym","RF","month","year","Size"))
panel_country_BM <- inner_join(x = panel_country_noNA,y = BRIC.yearly_helper, by = "Id")
# Determine the B/M breakpoints based on big stocks only
hlpvariable2 <- panel_country_BM[month==7 & !is.na(BM) & Size=="Big", .(bm_bb30 = quantile(BM , probs = c(0.3), na.rm=T),
bm_bb70 = quantile(BM , probs = c(0.7), na.rm=T)),by=year]
# Merge the B/M portfolio allocation back from July Y to June Y+1
panel_country_new <- merge(panel_country_BM,hlpvariable2,
by.x=c("hcjun"),
by.y=c("year"),
all.x=T)
panel_country_new[ , pf.bm := ifelse(BM>bm_bb70,"High",ifelse((BM<=bm_bb70 & BM>bm_bb30),"Neutral",ifelse(BM<=bm_bb30,"Low",NA)))]
panel_country_new[, SIZE_VALUE := paste0(Size,".",pf.bm)]
# get an overview
head(panel_country_new)

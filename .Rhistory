View(BRA)
BRA <- rbind(mean(su_BRA$MV.USD),median(su_BRA$MV.USD),sum(su_BRA$MV.USD),round(as.double(sum(su_BRA$MV.USD)*100/sum(deStats$MV.USD),digits = 10),length = ),as.character(min(su_BRA$ym)),as.character(max(su_BRA$ym)))
View(BRA)
BRA <- rbind(mean(su_BRA$MV.USD),median(su_BRA$MV.USD),sum(su_BRA$MV.USD),round(as.double(sum(su_BRA$MV.USD)*100/sum(deStats$MV.USD),digits = 2),length = ),as.character(min(su_BRA$ym)),as.character(max(su_BRA$ym)))
View(BRA)
BRA <- rbind(mean(su_BRA$MV.USD),median(su_BRA$MV.USD),sum(su_BRA$MV.USD),round(as.double(sum(su_BRA$MV.USD)*100/sum(deStats$MV.USD)),length = ),as.character(min(su_BRA$ym)),as.character(max(su_BRA$ym)))
View(BRA)
BRA <- rbind(mean(su_BRA$MV.USD),median(su_BRA$MV.USD),sum(su_BRA$MV.USD),round(as.double(sum(su_BRA$MV.USD)/sum(deStats$MV.USD)),length = ),as.character(min(su_BRA$ym)),as.character(max(su_BRA$ym)))
View(BRA)
BRA <- rbind(mean(su_BRA$MV.USD),median(su_BRA$MV.USD),sum(su_BRA$MV.USD),round(as.decimal(sum(su_BRA$MV.USD)/sum(deStats$MV.USD)),length = ),as.character(min(su_BRA$ym)),as.character(max(su_BRA$ym)))
BRA <- rbind(mean(su_BRA$MV.USD),median(su_BRA$MV.USD),sum(su_BRA$MV.USD),as.double(sum(su_BRA$MV.USD)/sum(deStats$MV.USD),length = ),as.character(min(su_BRA$ym)),as.character(max(su_BRA$ym)))
BRA <- rbind(mean(su_BRA$MV.USD),median(su_BRA$MV.USD),sum(su_BRA$MV.USD),as.double(sum(su_BRA$MV.USD)/sum(deStats$MV.USD),as.character(min(su_BRA$ym)),as.character(max(su_BRA$ym)))
BRA <- rbind(mean(su_BRA$MV.USD),median(su_BRA$MV.USD),sum(su_BRA$MV.USD),as.double(sum(su_BRA$MV.USD)/sum(deStats$MV.USD)),as.character(min(su_BRA$ym)),as.character(max(su_BRA$ym)))
BRA <- rbind(mean(su_BRA$MV.USD),median(su_BRA$MV.USD),sum(su_BRA$MV.USD),as.double(sum(su_BRA$MV.USD)/sum(deStats$MV.USD)),as.character(min(su_BRA$ym)),as.character(max(su_BRA$ym)))
View(BRA)
BRA <- rbind(mean(su_BRA$MV.USD),median(su_BRA$MV.USD),sum(su_BRA$MV.USD),round(as.double(sum(su_BRA$MV.USD)/sum(deStats$MV.USD)),digits = 4),as.character(min(su_BRA$ym)),as.character(max(su_BRA$ym)))
View(BRA)
BRA <- rbind(mean(su_BRA$MV.USD),median(su_BRA$MV.USD),sum(su_BRA$MV.USD),round(as.double((sum(su_BRA$MV.USD)*100)/sum(deStats$MV.USD)),digits = 4),as.character(min(su_BRA$ym)),as.character(max(su_BRA$ym)))
View(BRA)
BRA <- rbind(mean(su_BRA$MV.USD),median(su_BRA$MV.USD),sum(su_BRA$MV.USD),round(as.double((sum(su_BRA$MV.USD)*100)/sum(deStats$MV.USD)),digits = 2),as.character(min(su_BRA$ym)),as.character(max(su_BRA$ym)))
View(BRA)
BRA <- rbind(min(zu_BRA$Id),mean(zu_BRA$Id),mean(su_BRA$MV.USD),max(zu_BRA$Id),median(su_BRA$MV.USD),sum(su_BRA$MV.USD),round(as.double((sum(su_BRA$MV.USD)*100)/sum(deStats$MV.USD)),digits = 2),as.character(min(su_BRA$ym)),as.character(max(su_BRA$ym)))
View(BRA)
BRA <- rbind(min(zu_BRA$Id),mean(zu_BRA$Id),max(zu_BRA$Id),mean(su_BRA$MV.USD),median(su_BRA$MV.USD),sum(su_BRA$MV.USD),round(as.double((sum(su_BRA$MV.USD)*100)/sum(deStats$MV.USD)),digits = 2),as.character(min(su_BRA$ym)),as.character(max(su_BRA$ym)))
View(BRA)
BRA <- rbind(min(zu_BRA$Id),round(mean(zu_BRA$Id),digits = 2),max(zu_BRA$Id),mean(su_BRA$MV.USD),median(su_BRA$MV.USD),sum(su_BRA$MV.USD),round(as.double((sum(su_BRA$MV.USD)*100)/sum(deStats$MV.USD)),digits = 2),as.character(min(su_BRA$ym)),as.character(max(su_BRA$ym)))
View(BRA)
format(BRA,scientific = TRUE)
format(min(zu_BRA$Id),scientific = TRUE)
format(mean(su_RUS$MV.USD),scientific = TRUE)
mean(su_RUS$MV.USD)
BRA <- rbind(min(zu_BRA$Id),round(mean(zu_BRA$Id),digits = 2),max(zu_BRA$Id),format(mean(su_BRA$MV.USD),scientific = TRUE),median(su_BRA$MV.USD),sum(su_BRA$MV.USD),round(as.double((sum(su_BRA$MV.USD)*100)/sum(deStats$MV.USD)),digits = 2),as.character(min(su_BRA$ym)),as.character(max(su_BRA$ym)))
View(BRA)
BRA <- rbind(min(zu_BRA$Id),round(mean(zu_BRA$Id),digits = 2),max(zu_BRA$Id),format(mean(su_BRA$MV.USD),scientific = TRUE),format(median(su_BRA$MV.USD),scientific = TRUE),format(sum(su_BRA$MV.USD),scientific = TRUE),round(as.double((sum(su_BRA$MV.USD)*100)/sum(deStats$MV.USD)),digits = 2),as.character(min(su_BRA$ym)),as.character(max(su_BRA$ym)))
View(BRA)
wu <- aggregate(Id ~ country.x, data = deStats, FUN=function(x) length(unique(x)))
View(wu)
View(wu)
RUS <- rbind(wu_RUS$Id,min(zu_RUS$Id),round(mean(zu_RUS$Id),digits = 2),max(zu_RUS$Id),format(mean(su_RUS$MV.USD),scientific = TRUE),format(median(su_RUS$MV.USD),scientific = TRUE),format(sum(su_RUS$MV.USD),scientific = TRUE),round(as.double((sum(su_RUS$MV.USD)*100)/sum(deStats$MV.USD)),digits = 2),as.character(min(su_RUS$ym)),as.character(max(su_RUS$ym)))
wu_RUS <- subset(wu,country.x == "RUS")
zu_RUS <- subset(zu,country.x == "RUS")
su_RUS <- subset(su,country.x == "RUS")
RUS <- rbind(wu_RUS$Id,min(zu_RUS$Id),round(mean(zu_RUS$Id),digits = 2),max(zu_RUS$Id),format(mean(su_RUS$MV.USD),scientific = TRUE),format(median(su_RUS$MV.USD),scientific = TRUE),format(sum(su_RUS$MV.USD),scientific = TRUE),round(as.double((sum(su_RUS$MV.USD)*100)/sum(deStats$MV.USD)),digits = 2),as.character(min(su_RUS$ym)),as.character(max(su_RUS$ym)))
View(RUS)
# BRA
wu_BRA <- subset(wu,country.x == "BRA")
zu_BRA <- subset(zu,country.x == "BRA")
su_BRA <- subset(su,country.x == "BRA")
BRA <- rbind(wu_BRA$Id,min(zu_BRA$Id),round(mean(zu_BRA$Id),digits = 2),max(zu_BRA$Id),format(mean(su_BRA$MV.USD),scientific = TRUE),format(median(su_BRA$MV.USD),scientific = TRUE),format(sum(su_BRA$MV.USD),scientific = TRUE),round(as.double((sum(su_BRA$MV.USD)*100)/sum(deStats$MV.USD)),digits = 2),as.character(min(su_BRA$ym)),as.character(max(su_BRA$ym)))
# RUS
wu_RUS <- subset(wu,country.x == "RUS")
zu_RUS <- subset(zu,country.x == "RUS")
su_RUS <- subset(su,country.x == "RUS")
RUS <- rbind(wu_RUS$Id,min(zu_RUS$Id),round(mean(zu_RUS$Id),digits = 2),max(zu_RUS$Id),format(mean(su_RUS$MV.USD),scientific = TRUE),format(median(su_RUS$MV.USD),scientific = TRUE),format(sum(su_RUS$MV.USD),scientific = TRUE),round(as.double((sum(su_RUS$MV.USD)*100)/sum(deStats$MV.USD)),digits = 2),as.character(min(su_RUS$ym)),as.character(max(su_RUS$ym)))
# IND
wu_IND <- subset(wu,country.x == "IND")
zu_IND <- subset(zu,country.x == "IND")
su_IND <- subset(su,country.x == "IND")
IND <- rbind(wu_IND$Id,min(zu_IND$Id),round(mean(zu_IND$Id),digits = 2),max(zu_IND$Id),format(mean(su_IND$MV.USD),scientific = TRUE),format(median(su_IND$MV.USD),scientific = TRUE),format(sum(su_IND$MV.USD),scientific = TRUE),round(as.double((sum(su_IND$MV.USD)*100)/sum(deStats$MV.USD)),digits = 2),as.character(min(su_IND$ym)),as.character(max(su_IND$ym)))
# CHN
wu_CHN <- subset(wu,country.x == "CHN")
zu_CHN <- subset(zu,country.x == "CHN")
su_CHN <- subset(su,country.x == "CHN")
CHN <- rbind(wu_CHN$Id,min(zu_CHN$Id),round(mean(zu_CHN$Id),digits = 2),max(zu_CHN$Id),format(mean(su_CHN$MV.USD),scientific = TRUE),format(median(su_CHN$MV.USD),scientific = TRUE),format(sum(su_CHN$MV.USD),scientific = TRUE),round(as.double((sum(su_CHN$MV.USD)*100)/sum(deStats$MV.USD)),digits = 2),as.character(min(su_CHN$ym)),as.character(max(su_CHN$ym)))
descriptive_statistics <- cbind(BRA,RUS,IND,CHN)
View(descriptive_statistics)
# BRA
wu_BRA <- subset(wu,country.x == "BRA")
zu_BRA <- subset(zu,country.x == "BRA")
su_BRA <- subset(su,country.x == "BRA")
BRA <- rbind(wu_BRA$Id,min(zu_BRA$Id),round(mean(zu_BRA$Id),digits = 2),max(zu_BRA$Id),format(mean(su_BRA$MV.USD),scientific = TRUE),format(median(su_BRA$MV.USD),scientific = TRUE),format(sum(su_BRA$MV.USD),scientific = TRUE),round(as.double((sum(su_BRA$MV.USD)*100)/sum(deStats$MV.USD)),digits = 2),as.character(min(su_BRA$ym)),as.character(max(su_BRA$ym)))
colnames(BRA)[1] <- "BRA"
# RUS
wu_RUS <- subset(wu,country.x == "RUS")
zu_RUS <- subset(zu,country.x == "RUS")
su_RUS <- subset(su,country.x == "RUS")
RUS <- rbind(wu_RUS$Id,min(zu_RUS$Id),round(mean(zu_RUS$Id),digits = 2),max(zu_RUS$Id),format(mean(su_RUS$MV.USD),scientific = TRUE),format(median(su_RUS$MV.USD),scientific = TRUE),format(sum(su_RUS$MV.USD),scientific = TRUE),round(as.double((sum(su_RUS$MV.USD)*100)/sum(deStats$MV.USD)),digits = 2),as.character(min(su_RUS$ym)),as.character(max(su_RUS$ym)))
colnames(RUS)[1] <- "RUS"
# IND
wu_IND <- subset(wu,country.x == "IND")
zu_IND <- subset(zu,country.x == "IND")
su_IND <- subset(su,country.x == "IND")
IND <- rbind(wu_IND$Id,min(zu_IND$Id),round(mean(zu_IND$Id),digits = 2),max(zu_IND$Id),format(mean(su_IND$MV.USD),scientific = TRUE),format(median(su_IND$MV.USD),scientific = TRUE),format(sum(su_IND$MV.USD),scientific = TRUE),round(as.double((sum(su_IND$MV.USD)*100)/sum(deStats$MV.USD)),digits = 2),as.character(min(su_IND$ym)),as.character(max(su_IND$ym)))
colnames(IND)[1] <- "IND"
# CHN
wu_CHN <- subset(wu,country.x == "CHN")
zu_CHN <- subset(zu,country.x == "CHN")
su_CHN <- subset(su,country.x == "CHN")
CHN <- rbind(wu_CHN$Id,min(zu_CHN$Id),round(mean(zu_CHN$Id),digits = 2),max(zu_CHN$Id),format(mean(su_CHN$MV.USD),scientific = TRUE),format(median(su_CHN$MV.USD),scientific = TRUE),format(sum(su_CHN$MV.USD),scientific = TRUE),round(as.double((sum(su_CHN$MV.USD)*100)/sum(deStats$MV.USD)),digits = 2),as.character(min(su_CHN$ym)),as.character(max(su_CHN$ym)))
colnames(CHN)[1] <- "CHN"
descriptive_statistics <- cbind(BRA,RUS,IND,CHN)
View(descriptive_statistics)
tu <- aggregate(Id ~ ym, data = deStats, FUN=function(x) length(unique(x)))
BRIC_descriptiveStats <- rbind(length(unique(deStats$Id)),min(tu$Id),round(mean(tu$Id),digits = 2),max(tu$Id),format(mean(su_BRA$MV.USD),scientific = TRUE),format(median(su_BRA$MV.USD),scientific = TRUE),format(sum(deStats$MV.USD),scientific = TRUE),100,as.character(min(su_BRA$ym)),as.character(max(su_BRA$ym)))
View(BRIC_descriptiveStats)
View(tu)
BRIC_descriptiveStats <- rbind(length(unique(deStats$Id)),min(tu$Id),round(mean(tu$Id),digits = 2),max(tu$Id),format(mean(su_BRA$MV.USD),scientific = TRUE),format(median(su_BRA$MV.USD),scientific = TRUE),format(sum(deStats$MV.USD),scientific = TRUE),100,as.character(min(tu$ym)),as.character(max(tu$ym)))
View(BRIC_descriptiveStats)
View(tu)
View(tu)
View(BRIC.maindata)
View(BRIC.monthly)
View(BRIC.monthly.raw)
View(BRIC.monthly.withNA)
BRIC.lol <- BRIC.monthly.withNA %>%
drop_na(RET.USD,MV,MV.USD,LMV.USD,MV.USD.June,MV.December,volatility,pf.momentum)
FFData <- read_csv("FF_Research_Data_5_Factors_2x3.CSV",
skip = 2)
# shorting data frame
one_m_tbill <- as.data.frame(FFData[c("X1","RF")][1:693,])
# adding a ym column to risk free rate data
one_m_tbill$ym<-as.yearmon(one_m_tbill$X1, "%Y %m")
#delete X1 column
one_m_tbill <- subset(one_m_tbill,select = c("X1","ym","RF"))
View(one_m_tbill)
View(BRIC.maindata)
View(BRIC.monthly)
load("C:/Users/johan/Documents/BRIC_Asset_Pricing_Project/BRIC_monthly.RData")
memory.limit(9999999999)
# loading R.data BRIC monthly
load("C:/Users/johan/Documents/BRIC_Asset_Pricing_Project/BRIC_monthly.RData")
# loading R.data BRIC static
load("C:/Users/johan/Documents/BRIC_Asset_Pricing_Project/BRIC_static.RData")
# loading R.data BRIC yearly
load("C:/Users/johan/Documents/BRIC_Asset_Pricing_Project/BRIC_yearly.RData")
#0 save raw data
BRIC.monthly.raw <- BRIC.monthly
BRIC.yearly.raw <- BRIC.yearly
#1 adjust date range (from May 1994 to October 2018)
#1.1 leave raw data with date adjustment
BRIC.monthly.withNA <- subset(BRIC.monthly.raw, Date >= "1994-05-31" & Date <= "2018-10-31")
BRIC.yearly.withNA <- subset(BRIC.yearly.raw, YEAR >= "1994" & YEAR <= "2018")
#1.2 working dataframe
BRIC.monthly <- subset(BRIC.monthly, Date >= "1994-05-31" & Date <= "2018-10-31")
BRIC.yearly <- subset(BRIC.yearly, YEAR >= "1994" & YEAR <= "2018")
# add a new column for the lagged MV.USD (this is the MV.USD from the previous month)
BRIC.monthly[, LMV.USD := lag((MV.USD),1), by =Id]
# lag MV for December
BRIC.monthly[, lagMV := lag((MV),12), by =Id]
# add a new column for volatility
BRIC.monthly[, volatility := lag(rollapplyr(RET.USD, 36, sd, fill = NA, partial = 12),1), by =Id]
# Momentum
# add 12 new columns for last 12 months returns
BRIC.monthly[, lag1 := lag((RET.USD),1), by =Id]
BRIC.monthly[, lag2 := lag((RET.USD),2), by =Id]
BRIC.monthly[, lag3 := lag((RET.USD),3), by =Id]
BRIC.monthly[, lag4 := lag((RET.USD),4), by =Id]
BRIC.monthly[, lag5 := lag((RET.USD),5), by =Id]
BRIC.monthly[, lag6 := lag((RET.USD),6), by =Id]
BRIC.monthly[, lag7 := lag((RET.USD),7), by =Id]
BRIC.monthly[, lag8 := lag((RET.USD),8), by =Id]
BRIC.monthly[, lag9 := lag((RET.USD),9), by =Id]
BRIC.monthly[, lag10 := lag((RET.USD),10), by =Id]
BRIC.monthly[, lag11 := lag((RET.USD),11), by =Id]
BRIC.monthly[, lag12 := lag((RET.USD),12), by =Id]
# negative values are replaced to 0
BRIC.monthly$lag1 <- replace(BRIC.monthly$lag1,BRIC.monthly$lag1<=0,0)
BRIC.monthly$lag2 <- replace(BRIC.monthly$lag2,BRIC.monthly$lag2<=0,0)
BRIC.monthly$lag3 <- replace(BRIC.monthly$lag3,BRIC.monthly$lag3<=0,0)
BRIC.monthly$lag4 <- replace(BRIC.monthly$lag4,BRIC.monthly$lag4<=0,0)
BRIC.monthly$lag5 <- replace(BRIC.monthly$lag5,BRIC.monthly$lag5<=0,0)
BRIC.monthly$lag6 <- replace(BRIC.monthly$lag6,BRIC.monthly$lag6<=0,0)
BRIC.monthly$lag7 <- replace(BRIC.monthly$lag7,BRIC.monthly$lag7<=0,0)
BRIC.monthly$lag8 <- replace(BRIC.monthly$lag8,BRIC.monthly$lag8<=0,0)
BRIC.monthly$lag9 <- replace(BRIC.monthly$lag9,BRIC.monthly$lag9<=0,0)
BRIC.monthly$lag10 <- replace(BRIC.monthly$lag10,BRIC.monthly$lag10<=0,0)
BRIC.monthly$lag11 <- replace(BRIC.monthly$lag11,BRIC.monthly$lag11<=0,0)
BRIC.monthly$lag12 <- replace(BRIC.monthly$lag12,BRIC.monthly$lag12<=0,0)
# replacing NA's with 0
BRIC.monthly$lag2 <- replace(BRIC.monthly$lag2,is.na(BRIC.monthly$lag2),0)
BRIC.monthly$lag3 <- replace(BRIC.monthly$lag3,is.na(BRIC.monthly$lag3),0)
BRIC.monthly$lag4 <- replace(BRIC.monthly$lag4,is.na(BRIC.monthly$lag4),0)
BRIC.monthly$lag5 <- replace(BRIC.monthly$lag5,is.na(BRIC.monthly$lag5),0)
BRIC.monthly$lag6 <- replace(BRIC.monthly$lag6,is.na(BRIC.monthly$lag6),0)
BRIC.monthly$lag7 <- replace(BRIC.monthly$lag7,is.na(BRIC.monthly$lag7),0)
BRIC.monthly$lag8 <- replace(BRIC.monthly$lag8,is.na(BRIC.monthly$lag8),0)
BRIC.monthly$lag9 <- replace(BRIC.monthly$lag9,is.na(BRIC.monthly$lag9),0)
BRIC.monthly$lag10 <- replace(BRIC.monthly$lag10,is.na(BRIC.monthly$lag10),0)
BRIC.monthly$lag11 <- replace(BRIC.monthly$lag11,is.na(BRIC.monthly$lag11),0)
BRIC.monthly$lag12 <- replace(BRIC.monthly$lag12,is.na(BRIC.monthly$lag12),0)
# positive values are replaced to 1
BRIC.monthly$lag1 <- replace(BRIC.monthly$lag1,BRIC.monthly$lag1<=0,0)
BRIC.monthly$lag2 <- replace(BRIC.monthly$lag2,BRIC.monthly$lag2>0,1)
BRIC.monthly$lag3 <- replace(BRIC.monthly$lag3,BRIC.monthly$lag3>0,1)
BRIC.monthly$lag4 <- replace(BRIC.monthly$lag4,BRIC.monthly$lag4>0,1)
BRIC.monthly$lag5 <- replace(BRIC.monthly$lag5,BRIC.monthly$lag5>0,1)
BRIC.monthly$lag6 <- replace(BRIC.monthly$lag6,BRIC.monthly$lag6>0,1)
BRIC.monthly$lag7 <- replace(BRIC.monthly$lag7,BRIC.monthly$lag7>0,1)
BRIC.monthly$lag8 <- replace(BRIC.monthly$lag8,BRIC.monthly$lag8>0,1)
BRIC.monthly$lag9 <- replace(BRIC.monthly$lag9,BRIC.monthly$lag9>0,1)
BRIC.monthly$lag10 <- replace(BRIC.monthly$lag10,BRIC.monthly$lag10>0,1)
BRIC.monthly$lag11 <- replace(BRIC.monthly$lag11,BRIC.monthly$lag11>0,1)
BRIC.monthly$lag12 <- replace(BRIC.monthly$lag12,BRIC.monthly$lag12>0,1)
# lag1 not included!
BRIC.monthly$lagSum <- BRIC.monthly$lag2 + BRIC.monthly$lag3 + BRIC.monthly$lag4 + BRIC.monthly$lag5 + BRIC.monthly$lag6 + BRIC.monthly$lag7 + BRIC.monthly$lag8 + BRIC.monthly$lag9 + BRIC.monthly$lag10 + BRIC.monthly$lag11 + BRIC.monthly$lag12
BRIC.monthly[ , pf.momentum := ifelse(lagSum>=8,"Winner",ifelse(lagSum < 8,"Looser",NA))]
# delete all entrys before June 1994
BRIC.monthly <- subset(BRIC.monthly, Date >= "1994-06-30" & Date <= "2018-10-31")
# calculate MV.USD.June for every column
# help columns
BRIC.monthly[,month := month(Date)]
BRIC.monthly[,year := year(Date)]
BRIC.monthly[,hcjun := ifelse(month>=7,year,year-1)]
# MV.USD.June column
intermediate <- filter(BRIC.monthly,BRIC.monthly$month == 7)
intermediate2 <- filter(BRIC.monthly,BRIC.monthly$month == 12)
# minimise for join
intermediate <- subset(intermediate, select = c("Id","LMV.USD","hcjun"))
colnames(intermediate)[2] <- "MV.USD.June"
intermediate2 <- subset(intermediate2, select = c("Id","lagMV","hcjun"))
colnames(intermediate2)[2] <- "MV.December"
BRIC.monthly <- subset(BRIC.monthly, select = c("Id","country","Date","MV","MV.USD","LMV.USD","RET","RET.USD","volatility","pf.momentum","ym","hcjun","year","month"))
# inner join automatically deletes values where MV.USD.June is not available
BRIC.monthly <- inner_join(x = BRIC.monthly,y = intermediate, by = c("Id","hcjun"))
BRIC.monthly <- inner_join(x = BRIC.monthly,y = intermediate2, by = c("Id","hcjun"))
# order BRIC.monthly
BRIC.monthly <- subset(BRIC.monthly, select = c("Id","country","Date","MV","MV.USD","LMV.USD","MV.USD.June","MV.December","RET","RET.USD","volatility","pf.momentum","ym","hcjun","year","month"))
# scaling
BRIC.monthly$MV <- BRIC.monthly$MV * 1000000
BRIC.monthly$MV.USD <- BRIC.monthly$MV.USD * 1000000
BRIC.monthly$LMV.USD <- BRIC.monthly$LMV.USD * 1000000
BRIC.monthly$MV.USD.June <- BRIC.monthly$MV.USD.June * 1000000
BRIC.monthly$MV.December <- BRIC.monthly$MV.December * 1000000
BRIC.monthly$MVChangeRate <- BRIC.monthly$MV.December/BRIC.monthly$MV
# 1/4 rebalancing information
BRIC.monthly[, leadr1 := lead((RET.USD),1), by =Id]
BRIC.monthly[, leadr2 := lead((RET.USD),2), by =Id]
BRIC.monthly[, leadm1 := lead((LMV.USD),1), by =Id]
BRIC.monthly[, leadm2 := lead((LMV.USD),2), by =Id]
View(BRIC.monthly)
load("C:/Users/johan/Documents/BRIC_Asset_Pricing_Project/BRIC_monthly.RData")
BRIC.monthly <- subset(BRIC.monthly, Date >= "1994-05-31")
BRIC.monthly.withNA <- subset(BRIC.monthly.raw, Date >= "1994-05-31")
# add a new column for the lagged MV.USD (this is the MV.USD from the previous month)
BRIC.monthly[, LMV.USD := lag((MV.USD),1), by =Id]
# lag MV for December
BRIC.monthly[, lagMV := lag((MV),12), by =Id]
# add a new column for volatility
BRIC.monthly[, volatility := lag(rollapplyr(RET.USD, 36, sd, fill = NA, partial = 12),1), by =Id]
# Momentum
# add 12 new columns for last 12 months returns
BRIC.monthly[, lag1 := lag((RET.USD),1), by =Id]
BRIC.monthly[, lag2 := lag((RET.USD),2), by =Id]
BRIC.monthly[, lag3 := lag((RET.USD),3), by =Id]
BRIC.monthly[, lag4 := lag((RET.USD),4), by =Id]
BRIC.monthly[, lag5 := lag((RET.USD),5), by =Id]
BRIC.monthly[, lag6 := lag((RET.USD),6), by =Id]
BRIC.monthly[, lag7 := lag((RET.USD),7), by =Id]
BRIC.monthly[, lag8 := lag((RET.USD),8), by =Id]
BRIC.monthly[, lag9 := lag((RET.USD),9), by =Id]
BRIC.monthly[, lag10 := lag((RET.USD),10), by =Id]
BRIC.monthly[, lag11 := lag((RET.USD),11), by =Id]
BRIC.monthly[, lag12 := lag((RET.USD),12), by =Id]
# negative values are replaced to 0
BRIC.monthly$lag1 <- replace(BRIC.monthly$lag1,BRIC.monthly$lag1<=0,0)
BRIC.monthly$lag2 <- replace(BRIC.monthly$lag2,BRIC.monthly$lag2<=0,0)
BRIC.monthly$lag3 <- replace(BRIC.monthly$lag3,BRIC.monthly$lag3<=0,0)
BRIC.monthly$lag4 <- replace(BRIC.monthly$lag4,BRIC.monthly$lag4<=0,0)
BRIC.monthly$lag5 <- replace(BRIC.monthly$lag5,BRIC.monthly$lag5<=0,0)
BRIC.monthly$lag6 <- replace(BRIC.monthly$lag6,BRIC.monthly$lag6<=0,0)
BRIC.monthly$lag7 <- replace(BRIC.monthly$lag7,BRIC.monthly$lag7<=0,0)
BRIC.monthly$lag8 <- replace(BRIC.monthly$lag8,BRIC.monthly$lag8<=0,0)
BRIC.monthly$lag9 <- replace(BRIC.monthly$lag9,BRIC.monthly$lag9<=0,0)
BRIC.monthly$lag10 <- replace(BRIC.monthly$lag10,BRIC.monthly$lag10<=0,0)
BRIC.monthly$lag11 <- replace(BRIC.monthly$lag11,BRIC.monthly$lag11<=0,0)
BRIC.monthly$lag12 <- replace(BRIC.monthly$lag12,BRIC.monthly$lag12<=0,0)
# replacing NA's with 0
BRIC.monthly$lag2 <- replace(BRIC.monthly$lag2,is.na(BRIC.monthly$lag2),0)
BRIC.monthly$lag3 <- replace(BRIC.monthly$lag3,is.na(BRIC.monthly$lag3),0)
BRIC.monthly$lag4 <- replace(BRIC.monthly$lag4,is.na(BRIC.monthly$lag4),0)
BRIC.monthly$lag5 <- replace(BRIC.monthly$lag5,is.na(BRIC.monthly$lag5),0)
BRIC.monthly$lag6 <- replace(BRIC.monthly$lag6,is.na(BRIC.monthly$lag6),0)
BRIC.monthly$lag7 <- replace(BRIC.monthly$lag7,is.na(BRIC.monthly$lag7),0)
BRIC.monthly$lag8 <- replace(BRIC.monthly$lag8,is.na(BRIC.monthly$lag8),0)
BRIC.monthly$lag9 <- replace(BRIC.monthly$lag9,is.na(BRIC.monthly$lag9),0)
BRIC.monthly$lag10 <- replace(BRIC.monthly$lag10,is.na(BRIC.monthly$lag10),0)
BRIC.monthly$lag11 <- replace(BRIC.monthly$lag11,is.na(BRIC.monthly$lag11),0)
BRIC.monthly$lag12 <- replace(BRIC.monthly$lag12,is.na(BRIC.monthly$lag12),0)
# positive values are replaced to 1
BRIC.monthly$lag1 <- replace(BRIC.monthly$lag1,BRIC.monthly$lag1<=0,0)
BRIC.monthly$lag2 <- replace(BRIC.monthly$lag2,BRIC.monthly$lag2>0,1)
BRIC.monthly$lag3 <- replace(BRIC.monthly$lag3,BRIC.monthly$lag3>0,1)
BRIC.monthly$lag4 <- replace(BRIC.monthly$lag4,BRIC.monthly$lag4>0,1)
BRIC.monthly$lag5 <- replace(BRIC.monthly$lag5,BRIC.monthly$lag5>0,1)
BRIC.monthly$lag6 <- replace(BRIC.monthly$lag6,BRIC.monthly$lag6>0,1)
BRIC.monthly$lag7 <- replace(BRIC.monthly$lag7,BRIC.monthly$lag7>0,1)
BRIC.monthly$lag8 <- replace(BRIC.monthly$lag8,BRIC.monthly$lag8>0,1)
BRIC.monthly$lag9 <- replace(BRIC.monthly$lag9,BRIC.monthly$lag9>0,1)
BRIC.monthly$lag10 <- replace(BRIC.monthly$lag10,BRIC.monthly$lag10>0,1)
BRIC.monthly$lag11 <- replace(BRIC.monthly$lag11,BRIC.monthly$lag11>0,1)
BRIC.monthly$lag12 <- replace(BRIC.monthly$lag12,BRIC.monthly$lag12>0,1)
# lag1 not included!
BRIC.monthly$lagSum <- BRIC.monthly$lag2 + BRIC.monthly$lag3 + BRIC.monthly$lag4 + BRIC.monthly$lag5 + BRIC.monthly$lag6 + BRIC.monthly$lag7 + BRIC.monthly$lag8 + BRIC.monthly$lag9 + BRIC.monthly$lag10 + BRIC.monthly$lag11 + BRIC.monthly$lag12
BRIC.monthly[ , pf.momentum := ifelse(lagSum>=8,"Winner",ifelse(lagSum < 8,"Looser",NA))]
View(BRIC.monthly)
BRIC.monthly[,month := month(Date)]
BRIC.monthly[,year := year(Date)]
BRIC.monthly[,hcjun := ifelse(month>=7,year,year-1)]
# MV.USD.June column
intermediate <- filter(BRIC.monthly,BRIC.monthly$month == 7)
intermediate2 <- filter(BRIC.monthly,BRIC.monthly$month == 12)
# minimise for join
intermediate <- subset(intermediate, select = c("Id","LMV.USD","hcjun"))
colnames(intermediate)[2] <- "MV.USD.June"
intermediate2 <- subset(intermediate2, select = c("Id","lagMV","hcjun"))
colnames(intermediate2)[2] <- "MV.December"
BRIC.monthly <- subset(BRIC.monthly, select = c("Id","country","Date","MV","MV.USD","LMV.USD","RET","RET.USD","volatility","pf.momentum","ym","hcjun","year","month"))
summary(BRIC.monthly)
BRIC.monthly <- inner_join(x = BRIC.monthly,y = intermediate, by = c("Id","hcjun"))
BRIC.monthly <- inner_join(x = BRIC.monthly,y = intermediate2, by = c("Id","hcjun"))
# order BRIC.monthly
BRIC.monthly <- subset(BRIC.monthly, select = c("Id","country","Date","MV","MV.USD","LMV.USD","MV.USD.June","MV.December","RET","RET.USD","volatility","pf.momentum","ym","hcjun","year","month"))
BRIC.monthly$MV <- BRIC.monthly$MV * 1000000
BRIC.monthly$MV.USD <- BRIC.monthly$MV.USD * 1000000
BRIC.monthly$LMV.USD <- BRIC.monthly$LMV.USD * 1000000
BRIC.monthly$MV.USD.June <- BRIC.monthly$MV.USD.June * 1000000
BRIC.monthly$MV.December <- BRIC.monthly$MV.December * 1000000
BRIC.monthly$MVChangeRate <- BRIC.monthly$MV.December/BRIC.monthly$MV
summary(BRIC.monthly)
BRIC.monthly[, leadr1 := lead((RET.USD),1), by =Id]
BRIC.monthly[, leadr2 := lead((RET.USD),2), by =Id]
BRIC.monthly[, leadm1 := lead((LMV.USD),1), by =Id]
BRIC.monthly[, leadm2 := lead((LMV.USD),2), by =Id]
BRIC.monthly
BRIC.monthly <- subset(BRIC.monthly, Date >= "1994-06-30" & Date <= "2018-10-31")
summary(BRIC.monthly)
# delete na's, set 0 and calculate important values
# no RET.USD data, no MV or no LMV.USD
BRIC.monthly <- BRIC.monthly %>%
drop_na(RET.USD,MV,MV.USD,LMV.USD,MV.USD.June,MV.December,volatility,pf.momentum)
summary(BRIC.monthly)
#3.0 the BRIC.yearly panel here is still balanced! We need to add a column for total assets the year before ----
#add the lagged WC02999 (shifted by Id) (this is the WC02999 from the previous year)
BRIC.yearly[, lag.value:=c(0, WC02999[-.N]), by=Id]
# rename column to TotalAssetsBefore
colnames(BRIC.yearly)[106] <- "TotalAssetsBefore"
#3.1 book value / equity and related ----
# delete rows with no WC03501 (Common equity)
BRIC.yearly <- BRIC.yearly %>%
drop_na(WC03501)
# set WC03263 (deferred taxes) zero if NA
BRIC.yearly$WC03263 <- BRIC.yearly$WC03263 %>% replace_na(0)
# add column for BookEquity (Hanauer 2020 calculation)
BRIC.yearly$BookEquity <- BRIC.yearly$WC03501 + BRIC.yearly$WC03263
# delete rows with negative BookEquity
BRIC.yearly <- BRIC.yearly[BRIC.yearly$BookEquity >= 0,]
#3.2 total assets ----
# delete rows with no WC02999 (total assets)
BRIC.yearly <- BRIC.yearly %>%
drop_na(WC02999)
# delete rows with no TotalAssetsBefore
BRIC.yearly <- BRIC.yearly %>%
drop_na(TotalAssetsBefore)
#3.3 operating profits ----
# "To have a valid value, at least one of cost components cost of goods sold, selling, general and administrative expenses, or interest expense must be non-missing." (Hanauer, 2019, p. 284) --> if one of these values is missing, we must delete these rows WC01001,WC01051,WC01101,WC01251
# delete rows where ALL 4 columns are NA
BRIC.yearly <- filter(BRIC.yearly,!is.na(WC01001) | !is.na(WC01051) | !is.na(WC01101) | !is.na(WC01251))
# replace all na's in this 4 columns with 0
BRIC.yearly$WC01001 <- BRIC.yearly$WC01001 %>% replace_na(0)
BRIC.yearly$WC01051 <- BRIC.yearly$WC01051 %>% replace_na(0)
BRIC.yearly$WC01101 <- BRIC.yearly$WC01101 %>% replace_na(0)
BRIC.yearly$WC01251 <- BRIC.yearly$WC01251 %>% replace_na(0)
# calculate operating profits (Hanauer, 2019, p.284)
BRIC.yearly$OperatingProfits <- (BRIC.yearly$WC01001 - BRIC.yearly$WC01051 - BRIC.yearly$WC01101 - BRIC.yearly$WC01251)
# 3.4 minimise data frame ----
# for BRIC.yearly we keep: Id, country, ICBSUC, YEAR, BookEquity, OperatingProfits and total assets
# Note: WC07201 is not used, as our MV should be the MV from the monthly data for 06.y !
BRIC.yearly <- subset(BRIC.yearly, select = c("Id","country","ICBSUC","YEAR","BookEquity","OperatingProfits","WC02999","TotalAssetsBefore"))
# we rename WC02999 to total assets
colnames(BRIC.yearly)[7] <- "TotalAssets"
# 3.5 create a help column hcdec (1 year lag) ----
BRIC.yearly$hcdec <- BRIC.yearly$YEAR + 1
# scaling
BRIC.yearly$BookEquity <- BRIC.yearly$BookEquity*1000
BRIC.yearly$OperatingProfits <- BRIC.yearly$OperatingProfits*1000
BRIC.yearly$TotalAssets <- BRIC.yearly$TotalAssets*1000
BRIC.yearly$TotalAssetsBefore <- BRIC.yearly$TotalAssetsBefore *1000
# load data sheet from French's website
FFData <- read_csv("FF_Research_Data_5_Factors_2x3.CSV",
skip = 2)
# shorting data frame
one_m_tbill <- as.data.frame(FFData[c("X1","RF")][1:693,])
# adding a ym column to risk free rate data
one_m_tbill$ym<-as.yearmon(one_m_tbill$X1, "%Y %m")
#delete X1 column
one_m_tbill <- subset(one_m_tbill,select = c("X1","ym","RF"))
# merge risk-free rate (1 month treasury bill rate) with monthly data
BRIC.monthly <- left_join(x = BRIC.monthly, y = one_m_tbill, by = "ym")
# make rf column numeric
BRIC.monthly$RF <- as.numeric(BRIC.monthly$RF)
# Add RiRF ----
BRIC.monthly$RiRF <- BRIC.monthly$RET.USD - BRIC.monthly$RF
# Local currency RiRF
BRIC.monthly$RiRF.local <- BRIC.monthly$RET - BRIC.monthly$RF
BRIC.maindata <- inner_join(x = BRIC.monthly,y = BRIC.yearly, by = c("Id","hcjun" = "hcdec"))
# Add a B/M column
BRIC.maindata$BM_Devil <- BRIC.maindata$BookEquity / BRIC.maindata$MV
# Add a OP/BE column
BRIC.maindata$OPBE <- BRIC.maindata$OperatingProfits / BRIC.maindata$BookEquity
# Add a AssetGrowth column
BRIC.maindata$AssetGrowth <- ((BRIC.maindata$TotalAssets - BRIC.maindata$TotalAssetsBefore)/BRIC.maindata$TotalAssetsBefore)
# we only look at data after July 1996
BRIC.maindata <- subset(BRIC.maindata, hcjun >= "1996")
BRIC.maindata$BM <- BRIC.maindata$BookEquity / BRIC.maindata$MV.December
#summary(BRIC.maindata)
# e.g. filter for China
#BRIC.maindata <- filter(BRIC.maindata,BRIC.maindata$country.x == "CHN")
setorder(BRIC.maindata,Date,-MV.USD.June)
hlpvariable <-  BRIC.maindata[month==7 & !is.na(MV.USD.June),
.(pf.size = ifelse((cumsum(MV.USD.June)/sum(MV.USD.June))>=0.97,"Micro",ifelse((cumsum(MV.USD.June)/sum(MV.USD.June))>=0.90,"Small","Big")),Id),
by=year]
# Merge the size portfolio allocation back from July Y to June Y+1
BRIC.maindata <- merge(BRIC.maindata,hlpvariable,
by.x=c("hcjun","Id"),
by.y=c("year","Id"),
all.x=T)
# delete NA's (only about 1000 rows)
BRIC.maindata <- na.omit(BRIC.maindata,cols = "pf.size")
# delete micro stocks
BRIC.maindata <- filter(BRIC.maindata,BRIC.maindata$pf.size != "Micro")
#aggregate(MV.USD ~ pf.size,BRIC.maindata,FUN=sum)
#sum(BRIC.maindata$MV.USD)
BRIC.maindata <- inner_join(x = BRIC.monthly,y = BRIC.yearly, by = c("Id","hcjun" = "hcdec"))
# Add a B/M column
BRIC.maindata$BM_Devil <- BRIC.maindata$BookEquity / BRIC.maindata$MV
# Add a OP/BE column
BRIC.maindata$OPBE <- BRIC.maindata$OperatingProfits / BRIC.maindata$BookEquity
# Add a AssetGrowth column
BRIC.maindata$AssetGrowth <- ((BRIC.maindata$TotalAssets - BRIC.maindata$TotalAssetsBefore)/BRIC.maindata$TotalAssetsBefore)
# we only look at data after July 1996
BRIC.maindata <- subset(BRIC.maindata, hcjun >= "1996")
BRIC.maindata$BM <- BRIC.maindata$BookEquity / BRIC.maindata$MV.December
#summary(BRIC.maindata)
setorder(BRIC.maindata,Date,-MV.USD.June)
hlpvariable <-  BRIC.maindata[month==7 & !is.na(MV.USD.June),
.(pf.size = ifelse((cumsum(MV.USD.June)/sum(MV.USD.June))>=0.97,"Micro",ifelse((cumsum(MV.USD.June)/sum(MV.USD.June))>=0.90,"Small","Big")),Id),
by=year]
# Merge the size portfolio allocation back from July Y to June Y+1
BRIC.maindata <- merge(BRIC.maindata,hlpvariable,
by.x=c("hcjun","Id"),
by.y=c("year","Id"),
all.x=T)
# delete NA's (only about 1000 rows)
BRIC.maindata <- na.omit(BRIC.maindata,cols = "pf.size")
# delete micro stocks
View(BRIC.maindata)
summary(BRIC.maindata)
deStats <- BRIC.maindata
# BRIC
tu <- aggregate(Id ~ ym, data = deStats, FUN=function(x) length(unique(x)))
deStats <- BRIC.maindata
# BRIC
tu <- aggregate(Id ~ ym, data = deStats, FUN=function(x) length(unique(x)))
fu <- aggregate(MV.USD ~ ym, data = deStats, FUN=sum)
BRIC_descriptiveStats <- rbind(length(unique(deStats$Id)),min(tu$Id),round(mean(tu$Id),digits = 2),max(tu$Id),format(mean(fu$MV.USD),scientific = TRUE),format(median(fu$MV.USD),scientific = TRUE),format(sum(deStats$MV.USD),scientific = TRUE),100,as.character(min(tu$ym)),as.character(max(tu$ym)))
colnames(BRIC_descriptiveStats)[1] <- "BRIC"
colnames(BRIC)[1] <- "BRIC"
colnames(BRIC_descriptiveStats)[1] <- "BRIC"
# countrywise
wu <- aggregate(Id ~ country.x, data = deStats, FUN=function(x) length(unique(x)))
zu <- aggregate(Id ~ ym + country.x, data = deStats, FUN=function(x) length(unique(x))) # check individually
su <- aggregate(MV.USD ~ ym + country.x, data = deStats, FUN=sum)
# BRA
wu_BRA <- subset(wu,country.x == "BRA")
zu_BRA <- subset(zu,country.x == "BRA")
su_BRA <- subset(su,country.x == "BRA")
BRA <- rbind(wu_BRA$Id,min(zu_BRA$Id),round(mean(zu_BRA$Id),digits = 2),max(zu_BRA$Id),format(mean(su_BRA$MV.USD),scientific = TRUE),format(median(su_BRA$MV.USD),scientific = TRUE),format(sum(su_BRA$MV.USD),scientific = TRUE),round(as.double((sum(su_BRA$MV.USD)*100)/sum(deStats$MV.USD)),digits = 2),as.character(min(su_BRA$ym)),as.character(max(su_BRA$ym)))
colnames(BRA)[1] <- "Brazil"
# RUS
wu_RUS <- subset(wu,country.x == "RUS")
zu_RUS <- subset(zu,country.x == "RUS")
su_RUS <- subset(su,country.x == "RUS")
RUS <- rbind(wu_RUS$Id,min(zu_RUS$Id),round(mean(zu_RUS$Id),digits = 2),max(zu_RUS$Id),format(mean(su_RUS$MV.USD),scientific = TRUE),format(median(su_RUS$MV.USD),scientific = TRUE),format(sum(su_RUS$MV.USD),scientific = TRUE),round(as.double((sum(su_RUS$MV.USD)*100)/sum(deStats$MV.USD)),digits = 2),as.character(min(su_RUS$ym)),as.character(max(su_RUS$ym)))
colnames(RUS)[1] <- "Russia"
# IND
wu_IND <- subset(wu,country.x == "IND")
zu_IND <- subset(zu,country.x == "IND")
su_IND <- subset(su,country.x == "IND")
IND <- rbind(wu_IND$Id,min(zu_IND$Id),round(mean(zu_IND$Id),digits = 2),max(zu_IND$Id),format(mean(su_IND$MV.USD),scientific = TRUE),format(median(su_IND$MV.USD),scientific = TRUE),format(sum(su_IND$MV.USD),scientific = TRUE),round(as.double((sum(su_IND$MV.USD)*100)/sum(deStats$MV.USD)),digits = 2),as.character(min(su_IND$ym)),as.character(max(su_IND$ym)))
colnames(IND)[1] <- "India"
# CHN
wu_CHN <- subset(wu,country.x == "CHN")
zu_CHN <- subset(zu,country.x == "CHN")
su_CHN <- subset(su,country.x == "CHN")
CHN <- rbind(wu_CHN$Id,min(zu_CHN$Id),round(mean(zu_CHN$Id),digits = 2),max(zu_CHN$Id),format(mean(su_CHN$MV.USD),scientific = TRUE),format(median(su_CHN$MV.USD),scientific = TRUE),format(sum(su_CHN$MV.USD),scientific = TRUE),round(as.double((sum(su_CHN$MV.USD)*100)/sum(deStats$MV.USD)),digits = 2),as.character(min(su_CHN$ym)),as.character(max(su_CHN$ym)))
colnames(CHN)[1] <- "China"
# one data frame
descriptive_statistics <- cbind(BRA,RUS,IND,CHN)
View(descriptive_statistics)
View(descriptive_statistics)
descriptive_statistics <- cbind(BRIC_descriptiveStats,BRA,RUS,IND,CHN)
View(descriptive_statistics)
rownames("Total no. firms","Min no. firms","Mean no. firms","Max no. firms","Mean size in USD","Median size in USD","Total size in USD","% of total size")
rownames(c("Total no. firms","Min no. firms","Mean no. firms","Max no. firms","Mean size in USD","Median size in USD","Total size in USD","% of total size"))
u <- rownames(c("Total no. firms","Min no. firms","Mean no. firms","Max no. firms","Mean size in USD","Median size in USD","Total size in USD","% of total size","Start ym","End ym"))
u <- rownames(rbind("Total no. firms","Min no. firms","Mean no. firms","Max no. firms","Mean size in USD","Median size in USD","Total size in USD","% of total size","Start ym","End ym"))
rownames(descriptive_statistics)[1:10] <- rbind("Total no. firms","Min no. firms","Mean no. firms","Max no. firms","Mean size in USD","Median size in USD","Total size in USD","% of total size","Start ym","End ym")
View(descriptive_statistics)
save(descriptive_statistics,file = "descriptive_statistics.RData")
load("~/BRIC_Asset_Pricing_Project/descriptive_statistics.RData")
View(descriptive_statistics)
save(descriptive_statistics,file = "descriptive_statistics.xlsx")
as.data.frame(descriptive_statistics)
library("writexl")
library("writexl")
install.packages("writexl")
library("writexl")
descriptive_statistics <- as.data.frame(descriptive_statistics)
View(descriptive_statistics)
library("writexl")
save(descriptive_statistics,file = "descriptive_statistics.RData")
write_xlsx(descriptive_statistics,"descriptive_statistics.xlsx")

portfolio_hml <- BRIC.maindata[!is.na(pf.size) & !is.na(pf.bm)] %>% # this operator nests functions
group_by(Date,SIZE_VALUE) %>% # do "everything" for the groups specified here
summarize(ret.port = weighted.mean(RMRF,
LMV.USD)) %>% # vw returns using lagged mcap
spread(SIZE_VALUE,ret.port) %>% # create one column for each group
mutate(
Small = (Small.High + Small.Neutral + Small.Low), # just exemplary
Big = (Big.High + Big.Neutral + Big.Low),
SMB = Small-Big,
High = (Small.High + Big.High)/2,
Low = (Small.Low + Big.Low)/2,
HML = High-Low
)
portfolio_hml <- as.data.table(portfolio_hml)
portfolio_rmw <- BRIC.maindata[!is.na(pf.size) & !is.na(pf.opbe)] %>% # this operator nests functions
group_by(Date,SIZE_PROFITABILITY) %>% # do "everything" for the groups specified here
summarize(ret.port = weighted.mean(RMRF,
LMV.USD)) %>% # vw returns using lagged mcap
spread(SIZE_PROFITABILITY,ret.port) %>% # create one column for each group
mutate(
Small = (Small.Robust + Small.Neutral + Small.Weak), # just exemplary
Big = (Big.Robust + Big.Neutral + Big.Weak),
SMB = Small-Big,
Robust = (Small.Robust + Big.Robust)/2,
Weak = (Small.Weak + Big.Weak)/2,
RMW = Robust - Weak
)
portfolio_rmw <- as.data.table(portfolio_rmw)
portfolio_cma <- BRIC.maindata[!is.na(pf.size) & !is.na(pf.ac)] %>% # this operator nests functions
group_by(Date,SIZE_INVESTMENT) %>% # do "everything" for the groups specified here
summarize(ret.port = weighted.mean(RMRF,
LMV.USD)) %>% # vw returns using lagged mcap
spread(SIZE_INVESTMENT,ret.port) %>% # create one column for each group
mutate(
Small = (Small.Aggressive + Small.Neutral + Small.Conservative), # just exemplary
Big = (Big.Aggressive + Big.Neutral + Big.Conservative),
SMB = Small-Big,
Aggressive = (Small.Aggressive + Big.Aggressive)/2,
Conservative = (Small.Conservative + Big.Conservative)/2,
CMA = Conservative - Aggressive
)
portfolio_cma <- as.data.table(portfolio_cma)
#########
test <- BRIC.maindata[!is.na(pf.size) & !is.na(pf.bm)] %>% # this operator nests functions
group_by(Date,pf.size) %>% # do "everything" for the groups specified here
summarize(ret.port = weighted.mean(RMRF,
LMV.USD)) %>% # vw returns using lagged mcap
spread(pf.size,ret.port) %>% # create one column for each group
mutate(
SMB = Small - Big
)
test <- as.data.table(test)
##########
factors <- left_join(x = portfolio_hml, y = portfolio_rmw, by = "Date")
factors <- left_join(x = factors, y = portfolio_cma, by = "Date")
factors <- left_join(x = factors, y = test, by = "Date")
factors <- subset(factors, select = c("Date","CMA","HML","RMW","SMB.x.x","SMB.x","SMB.y","SMB.y.y"))
b <- ggplot(data = factors) + geom_line(aes(x = Date, y = SMB.x)) + geom_line(aes(x = Date, y = SMB, color="red")) + geom_line(aes(x = Date, y = SMB.y, color="blue"))
b
BRIC.maindata[, SIZE_VALUE_PROFITABILITY_INVESTMENT := paste0(pf.size,".",pf.bm,".",pf.opbe,".",pf.ac)]
portfolio <- BRIC.maindata[!is.na(pf.size) & !is.na(pf.bm)] %>% # this operator nests functions
group_by(Date,SIZE_VALUE) %>% # do "everything" for the groups specified here
summarize(ret.port = weighted.mean(RMRF,
LMV.USD)) %>% # vw returns using lagged mcap
spread(SIZE_VALUE,ret.port) %>% # create one column for each group
mutate(
Small = (Small.High + Small.Neutral + Small.Low)/3, # just exemplary
Big = (Big.High + Big.Neutral + Big.Low)/3,
SMB = Small-Big,
High = (Small.High + Big.High)/2,
Low = (Small.Low + Big.Low)/2,
HML = High-Low
)
portfolio <- as.data.table(portfolio)
portfolio_hml <- BRIC.maindata[!is.na(pf.size) & !is.na(pf.bm)] %>% # this operator nests functions
group_by(Date,SIZE_VALUE) %>% # do "everything" for the groups specified here
summarize(ret.port = weighted.mean(RMRF,
LMV.USD)) %>% # vw returns using lagged mcap
spread(SIZE_VALUE,ret.port) %>% # create one column for each group
mutate(
Small = (Small.High + Small.Neutral + Small.Low)/3, # just exemplary
Big = (Big.High + Big.Neutral + Big.Low)/3,
SMB = Small-Big,
High = (Small.High + Big.High)/2,
Low = (Small.Low + Big.Low)/2,
HML = High-Low
)
portfolio_hml <- as.data.table(portfolio_hml)
portfolio_rmw <- BRIC.maindata[!is.na(pf.size) & !is.na(pf.opbe)] %>% # this operator nests functions
group_by(Date,SIZE_PROFITABILITY) %>% # do "everything" for the groups specified here
summarize(ret.port = weighted.mean(RMRF,
LMV.USD)) %>% # vw returns using lagged mcap
spread(SIZE_PROFITABILITY,ret.port) %>% # create one column for each group
mutate(
Small = (Small.Robust + Small.Neutral + Small.Weak)/3, # just exemplary
Big = (Big.Robust + Big.Neutral + Big.Weak)/3,
SMB = Small-Big,
Robust = (Small.Robust + Big.Robust)/2,
Weak = (Small.Weak + Big.Weak)/2,
RMW = Robust - Weak
)
portfolio_rmw <- as.data.table(portfolio_rmw)
portfolio_cma <- BRIC.maindata[!is.na(pf.size) & !is.na(pf.ac)] %>% # this operator nests functions
group_by(Date,SIZE_INVESTMENT) %>% # do "everything" for the groups specified here
summarize(ret.port = weighted.mean(RMRF,
LMV.USD)) %>% # vw returns using lagged mcap
spread(SIZE_INVESTMENT,ret.port) %>% # create one column for each group
mutate(
Small = (Small.Aggressive + Small.Neutral + Small.Conservative)/3, # just exemplary
Big = (Big.Aggressive + Big.Neutral + Big.Conservative)/3,
SMB = Small-Big,
Aggressive = (Small.Aggressive + Big.Aggressive)/2,
Conservative = (Small.Conservative + Big.Conservative)/2,
CMA = Conservative - Aggressive
)
portfolio_cma <- as.data.table(portfolio_cma)
#########
test <- BRIC.maindata[!is.na(pf.size) & !is.na(pf.bm)] %>% # this operator nests functions
group_by(Date,pf.size) %>% # do "everything" for the groups specified here
summarize(ret.port = weighted.mean(RMRF,
LMV.USD)) %>% # vw returns using lagged mcap
spread(pf.size,ret.port) %>% # create one column for each group
mutate(
SMB = Small - Big
)
test <- as.data.table(test)
##########
factors <- inner_join(x = portfolio_hml, y = portfolio_rmw, by = "Date")
factors <- inner_join(x = factors, y = portfolio_cma, by = "Date")
factors <- inner_join(x = factors, y = test, by = "Date")
factors <- subset(factors, select = c("Date","CMA","HML","RMW","SMB.x.x","SMB.x","SMB.y","SMB.y.y"))
b <- ggplot(data = factors) + geom_line(aes(x = Date, y = SMB.x)) + geom_line(aes(x = Date, y = SMB, color="red")) + geom_line(aes(x = Date, y = SMB.y, color="blue"))
b
BRIC.benchmark <- BRIC.maindata
BRIC.benchmark <- filter(BRIC.benchmark,BRIC.benchmark$pf.size == "Big")
benchmark.retBricY <- aggregate(RMRF ~ hcjun, data = BRIC.benchmark,FUN = mean)
benchmark.retBricM <- aggregate(RMRF ~ ym + hcjun, data = BRIC.benchmark,FUN = mean)
benchmark.retBricY <- aggregate(RMRF ~ hcjun, data = BRIC.benchmark,FUN = mean)
# per month
benchmark.retBricM <- aggregate(RMRF ~ ym + hcjun, data = BRIC.benchmark,FUN = mean)
# per country
# per year
benchmark.retCountryY <- aggregate(RMRF ~ country.x + hcjun, data = BRIC.benchmark,FUN = mean)
# per month
benchmark.retCountryM <- aggregate(RMRF ~ country.x + ym + hcjun, data = BRIC.benchmark,FUN = mean)
# single dataframe
benchmark_BRIC <- inner_join(benchmark.retBricY,benchmark.retBricM,by = "hcjun")
benchmark_Country <- inner_join(benchmark.retCountryY,benchmark.retCountryM,by = c("hcjun","country.x"))
View(benchmark_BRIC)
# create copy
BRIC.benchmark <- BRIC.maindata
# filter on pf.size
BRIC.benchmark <- filter(BRIC.benchmark,BRIC.benchmark$pf.size == "Big")
# BRIC
# per year
benchmark.retBricY <- aggregate(RMRF ~ hcjun, data = BRIC.benchmark,FUN = mean)
benchmark.retBricY$RMRF <- benchmark.retBricY$RMRF * 12
# per month
benchmark.retBricM <- aggregate(RMRF ~ ym + hcjun, data = BRIC.benchmark,FUN = mean)
# per country
# per year
benchmark.retCountryY <- aggregate(RMRF ~ country.x + hcjun, data = BRIC.benchmark,FUN = mean)
benchmark.retCountryY$RMRF <- benchmark.retCountryY$RMRF * 12
# per month
benchmark.retCountryM <- aggregate(RMRF ~ country.x + ym + hcjun, data = BRIC.benchmark,FUN = mean)
# single dataframe
benchmark_BRIC <- inner_join(benchmark.retBricY,benchmark.retBricM,by = "hcjun")
benchmark_Country <- inner_join(benchmark.retCountryY,benchmark.retCountryM,by = c("hcjun","country.x"))
# rename columns
colnames(benchmark_BRIC)[2] <- "YearlyReturn"
colnames(benchmark_BRIC)[4] <- "MonthlyReturn"
colnames(benchmark_Country)[3] <- "YearlyReturn"
colnames(benchmark_Country)[5] <- "MonthlyReturn"
# plot
a <- ggplot(data = benchmark_BRIC) + geom_line(aes(x = ym, y = MonthlyReturn)) + geom_line(aes(x = ym, y = YearlyReturn, color="red"))
a
View(benchmark_Country)
![PortfolioSorts.] ("BRIC_Asset_Pricing_Project/Images/PortfolioSorts.jpg")
getwd()
# Add a OP/BE column
BRIC.maindata$OPBE <- BRIC.maindata$OperatingProfits / BRIC.maindata$BookValue
# Determine the OP/BE breakpoints based on big stocks only
hlpvariable2 <- BRIC.maindata[month==7 & !is.na(OPBE) & pf.size=="Big", .(opbe_bb30 = quantile(OPBE , probs = c(0.3), na.rm=T),
opbe_bb70 = quantile(OPBE , probs = c(0.7), na.rm=T)),by=year]
# Merge the OP/BE portfolio allocation back from July Y to June Y+1
BRIC.maindata <- merge(BRIC.maindata,hlpvariable2,
by.x=c("hcjun"),
by.y=c("year"),
all.x=T)
# 3 OP/BE brackets: Robust, Neutral and Weak
BRIC.maindata[ , pf.opbe := ifelse(OPBE>opbe_bb70,"Robust",ifelse((OPBE<=opbe_bb70 & OPBE>opbe_bb30),"Neutral",ifelse(OPBE<=opbe_bb30,"Weak",NA)))]
# Add a B/M column
BRIC.maindata$BM <- BRIC.maindata$BookValue / BRIC.maindata$MV
# Determine the B/M breakpoints based on big stocks only
hlpvariable2 <- BRIC.maindata[month==7 & !is.na(BM) & pf.size=="Big", .(bm_bb30 = quantile(BM , probs = c(0.3), na.rm=T),
bm_bb70 = quantile(BM , probs = c(0.7), na.rm=T)),by=year]
# Merge the B/M portfolio allocation back from July Y to June Y+1
BRIC.maindata <- merge(BRIC.maindata,hlpvariable2,
by.x=c("hcjun"),
by.y=c("year"),
all.x=T)
BRIC.maindata[ , pf.bm := ifelse(BM>bm_bb70,"High",ifelse((BM<=bm_bb70 & BM>bm_bb30),"Neutral",ifelse(BM<=bm_bb30,"Low",NA)))]
BRIC.maindata <- inner_join(x = BRIC.monthly,y = BRIC.yearly, by = c("Id","hcjun" = "YEAR"))
setorder(BRIC.maindata,Date,-MV.USD.June)
hlpvariable <-  BRIC.maindata[month==7 & !is.na(MV.USD.June),
.(pf.size = ifelse((cumsum(MV.USD.June)/sum(MV.USD.June))>=0.9,"Small","Big"),Id),
by=year]
# Merge the size portfolio allocation back from July Y to June Y+1
BRIC.maindata <- merge(BRIC.maindata,hlpvariable,
by.x=c("hcjun","Id"),
by.y=c("year","Id"),
all.x=T)
# delete NA's (only about 1000 rows)
BRIC.maindata <- na.omit(BRIC.maindata,cols = "pf.size")
# Add a B/M column
BRIC.maindata$BM <- BRIC.maindata$BookValue / BRIC.maindata$MV
# Determine the B/M breakpoints based on big stocks only
hlpvariable2 <- BRIC.maindata[month==7 & !is.na(BM) & pf.size=="Big", .(bm_bb30 = quantile(BM , probs = c(0.3), na.rm=T),
bm_bb70 = quantile(BM , probs = c(0.7), na.rm=T)),by=year]
# Merge the B/M portfolio allocation back from July Y to June Y+1
BRIC.maindata <- merge(BRIC.maindata,hlpvariable2,
by.x=c("hcjun"),
by.y=c("year"),
all.x=T)
BRIC.maindata[ , pf.bm := ifelse(BM>bm_bb70,"High",ifelse((BM<=bm_bb70 & BM>bm_bb30),"Neutral",ifelse(BM<=bm_bb30,"Low",NA)))]
BRIC.maindata[, SIZE_VALUE := paste0(pf.size,".",pf.bm)]
# Add a OP/BE column
BRIC.maindata$OPBE <- BRIC.maindata$OperatingProfits / BRIC.maindata$BookValue
# Determine the OP/BE breakpoints based on big stocks only
hlpvariable2 <- BRIC.maindata[month==7 & !is.na(OPBE) & pf.size=="Big", .(opbe_bb30 = quantile(OPBE , probs = c(0.3), na.rm=T),
opbe_bb70 = quantile(OPBE , probs = c(0.7), na.rm=T)),by=year]
# Merge the OP/BE portfolio allocation back from July Y to June Y+1
BRIC.maindata <- merge(BRIC.maindata,hlpvariable2,
by.x=c("hcjun"),
by.y=c("year"),
all.x=T)
# 3 OP/BE brackets: Robust, Neutral and Weak
BRIC.maindata[ , pf.opbe := ifelse(OPBE>opbe_bb70,"Robust",ifelse((OPBE<=opbe_bb70 & OPBE>opbe_bb30),"Neutral",ifelse(OPBE<=opbe_bb30,"Weak",NA)))]
BRIC.maindata[, SIZE_PROFITABILITY := paste0(pf.size,".",pf.opbe)]
# Add a AssetChange column
BRIC.maindata$AssetChange <- ((BRIC.maindata$TotalAssets - BRIC.maindata$TotalAssetsBefore)/BRIC.maindata$TotalAssetsBefore)
# Determine the AC breakpoints based on big stocks only
hlpvariable2 <- BRIC.maindata[month==7 & !is.na(AssetChange) & pf.size=="Big", .(ac_bb30 = quantile(AssetChange , probs = c(0.3), na.rm=T),
ac_bb70 = quantile(AssetChange , probs = c(0.7), na.rm=T)),by=year]
# Merge the AC portfolio allocation back from July Y to June Y+1
BRIC.maindata <- merge(BRIC.maindata,hlpvariable2,
by.x=c("hcjun"),
by.y=c("year"),
all.x=T)
# 3 investment brackets: Aggressive, neutral and conservative
BRIC.maindata[ , pf.ac := ifelse(AssetChange>ac_bb70,"Aggressive",ifelse((AssetChange<=ac_bb70 & AssetChange>ac_bb30),"Neutral",ifelse(AssetChange<=ac_bb30,"Conservative",NA)))]
BRIC.maindata[, SIZE_INVESTMENT := paste0(pf.size,".",pf.ac)]
unique(BRIC.maindata$pf.size)
unique(BRIC.maindata$pf.bm)
unique(BRIC.maindata$pf.opbe)
unique(BRIC.maindata$pf.ac)
unique(BRIC.maindata$SIZE_VALUE)
unique(BRIC.maindata$SIZE_PROFITABILITY)
unique(BRIC.maindata$SIZE_INVESTMENT)
View(BRIC.maindata)
portfolio_hml <- BRIC.maindata[!is.na(pf.size) & !is.na(pf.bm)] %>% # this operator nests functions
group_by(Date,SIZE_VALUE) %>% # do "everything" for the groups specified here
summarize(ret.port = weighted.mean(RMRF,
LMV.USD)) %>% # vw returns using lagged mcap
spread(SIZE_VALUE,ret.port) %>% # create one column for each group
mutate(
Small = (Small.High + Small.Neutral + Small.Low)/3, # just exemplary
Big = (Big.High + Big.Neutral + Big.Low)/3,
SMB = Small-Big,
High = (Small.High + Big.High)/2,
Low = (Small.Low + Big.Low)/2,
HML = High-Low
)
portfolio_hml <- as.data.table(portfolio_hml)
portfolio_rmw <- BRIC.maindata[!is.na(pf.size) & !is.na(pf.opbe)] %>% # this operator nests functions
group_by(Date,SIZE_PROFITABILITY) %>% # do "everything" for the groups specified here
summarize(ret.port = weighted.mean(RMRF,
LMV.USD)) %>% # vw returns using lagged mcap
spread(SIZE_PROFITABILITY,ret.port) %>% # create one column for each group
mutate(
Small = (Small.Robust + Small.Neutral + Small.Weak)/3, # just exemplary
Big = (Big.Robust + Big.Neutral + Big.Weak)/3,
SMB = Small-Big,
Robust = (Small.Robust + Big.Robust)/2,
Weak = (Small.Weak + Big.Weak)/2,
RMW = Robust - Weak
)
portfolio_rmw <- as.data.table(portfolio_rmw)
portfolio_cma <- BRIC.maindata[!is.na(pf.size) & !is.na(pf.ac)] %>% # this operator nests functions
group_by(Date,SIZE_INVESTMENT) %>% # do "everything" for the groups specified here
summarize(ret.port = weighted.mean(RMRF,
LMV.USD)) %>% # vw returns using lagged mcap
spread(SIZE_INVESTMENT,ret.port) %>% # create one column for each group
mutate(
Small = (Small.Aggressive + Small.Neutral + Small.Conservative)/3, # just exemplary
Big = (Big.Aggressive + Big.Neutral + Big.Conservative)/3,
SMB = Small-Big,
Aggressive = (Small.Aggressive + Big.Aggressive)/2,
Conservative = (Small.Conservative + Big.Conservative)/2,
CMA = Conservative - Aggressive
)
portfolio_cma <- as.data.table(portfolio_cma)
View(portfolio_hml)
View(portfolio_rmw)
View(portfolio_cma)
factors <- inner_join(x = portfolio_hml, y = portfolio_rmw, by = "Date")
factors <- inner_join(x = factors, y = portfolio_cma, by = "Date")
factors <- inner_join(x = factors, y = test, by = "Date")
factors <- subset(factors, select = c("Date","CMA","HML","RMW","SMB.x.x","SMB.x","SMB.y","SMB.y.y"))
View(factors)
portfolio_hml <- BRIC.maindata[!is.na(pf.size) & !is.na(pf.bm)] %>% # this operator nests functions
group_by(Date,SIZE_VALUE) %>% # do "everything" for the groups specified here
summarize(ret.port = weighted.mean(RMRF,
LMV.USD)) %>% # vw returns using lagged mcap
spread(SIZE_VALUE,ret.port) %>% # create one column for each group
mutate(
Small = (Small.High + Small.Neutral + Small.Low)/3, # just exemplary
Big = (Big.High + Big.Neutral + Big.Low)/3,
SMB = Small-Big,
High = (Small.High + Big.High)/2,
Low = (Small.Low + Big.Low)/2,
HML = High-Low
)
portfolio_hml <- as.data.table(portfolio_hml)
portfolio_rmw <- BRIC.maindata[!is.na(pf.size) & !is.na(pf.opbe)] %>% # this operator nests functions
group_by(Date,SIZE_PROFITABILITY) %>% # do "everything" for the groups specified here
summarize(ret.port = weighted.mean(RMRF,
LMV.USD)) %>% # vw returns using lagged mcap
spread(SIZE_PROFITABILITY,ret.port) %>% # create one column for each group
mutate(
Small = (Small.Robust + Small.Neutral + Small.Weak)/3, # just exemplary
Big = (Big.Robust + Big.Neutral + Big.Weak)/3,
SMB = Small-Big,
Robust = (Small.Robust + Big.Robust)/2,
Weak = (Small.Weak + Big.Weak)/2,
RMW = Robust - Weak
)
portfolio_rmw <- as.data.table(portfolio_rmw)
portfolio_cma <- BRIC.maindata[!is.na(pf.size) & !is.na(pf.ac)] %>% # this operator nests functions
group_by(Date,SIZE_INVESTMENT) %>% # do "everything" for the groups specified here
summarize(ret.port = weighted.mean(RMRF,
LMV.USD)) %>% # vw returns using lagged mcap
spread(SIZE_INVESTMENT,ret.port) %>% # create one column for each group
mutate(
Small = (Small.Aggressive + Small.Neutral + Small.Conservative)/3, # just exemplary
Big = (Big.Aggressive + Big.Neutral + Big.Conservative)/3,
SMB = Small-Big,
Aggressive = (Small.Aggressive + Big.Aggressive)/2,
Conservative = (Small.Conservative + Big.Conservative)/2,
CMA = Conservative - Aggressive
)
portfolio_cma <- as.data.table(portfolio_cma)
factors <- inner_join(x = portfolio_hml, y = portfolio_rmw, by = "Date")
factors <- inner_join(x = factors, y = portfolio_cma, by = "Date")
factors <- inner_join(x = factors, y = test, by = "Date")
factors <- subset(factors, select = c("Date","CMA","HML","RMW","SMB.x.x","SMB.x","SMB.y"))
b <- ggplot(data = factors) + geom_line(aes(x = Date, y = SMB.x)) + geom_line(aes(x = Date, y = SMB, color="red")) + geom_line(aes(x = Date, y = SMB.y, color="blue"))
b
View(factors)
factors <- inner_join(x = portfolio_hml, y = portfolio_rmw, by = "Date")
factors <- inner_join(x = factors, y = portfolio_cma, by = "Date")
factors <- inner_join(x = factors, y = test, by = "Date")
factors <- subset(factors, select = c("Date","CMA","HML","RMW","SMB","SMB.x","SMB.y"))
portfolio_hml <- BRIC.maindata[!is.na(pf.size) & !is.na(pf.bm)] %>% # this operator nests functions
group_by(Date,SIZE_VALUE) %>% # do "everything" for the groups specified here
summarize(ret.port = weighted.mean(RMRF,
LMV.USD)) %>% # vw returns using lagged mcap
spread(SIZE_VALUE,ret.port) %>% # create one column for each group
mutate(
Small = (Small.High + Small.Neutral + Small.Low)/3, # just exemplary
Big = (Big.High + Big.Neutral + Big.Low)/3,
SMB = Small-Big,
High = (Small.High + Big.High)/2,
Low = (Small.Low + Big.Low)/2,
HML = High-Low
)
portfolio_hml <- as.data.table(portfolio_hml)
portfolio_rmw <- BRIC.maindata[!is.na(pf.size) & !is.na(pf.opbe)] %>% # this operator nests functions
group_by(Date,SIZE_PROFITABILITY) %>% # do "everything" for the groups specified here
summarize(ret.port = weighted.mean(RMRF,
LMV.USD)) %>% # vw returns using lagged mcap
spread(SIZE_PROFITABILITY,ret.port) %>% # create one column for each group
mutate(
Small = (Small.Robust + Small.Neutral + Small.Weak)/3, # just exemplary
Big = (Big.Robust + Big.Neutral + Big.Weak)/3,
SMB = Small-Big,
Robust = (Small.Robust + Big.Robust)/2,
Weak = (Small.Weak + Big.Weak)/2,
RMW = Robust - Weak
)
portfolio_rmw <- as.data.table(portfolio_rmw)
portfolio_cma <- BRIC.maindata[!is.na(pf.size) & !is.na(pf.ac)] %>% # this operator nests functions
group_by(Date,SIZE_INVESTMENT) %>% # do "everything" for the groups specified here
summarize(ret.port = weighted.mean(RMRF,
LMV.USD)) %>% # vw returns using lagged mcap
spread(SIZE_INVESTMENT,ret.port) %>% # create one column for each group
mutate(
Small = (Small.Aggressive + Small.Neutral + Small.Conservative)/3, # just exemplary
Big = (Big.Aggressive + Big.Neutral + Big.Conservative)/3,
SMB = Small-Big,
Aggressive = (Small.Aggressive + Big.Aggressive)/2,
Conservative = (Small.Conservative + Big.Conservative)/2,
CMA = Conservative - Aggressive
)
portfolio_cma <- as.data.table(portfolio_cma)
factors <- inner_join(x = portfolio_hml, y = portfolio_rmw, by = "Date")
factors <- inner_join(x = factors, y = portfolio_cma, by = "Date")
factors <- inner_join(x = factors, y = test, by = "Date")
factors <- subset(factors, select = c("Date","CMA","HML","RMW","SMB","SMB.x","SMB.y"))
View(factors)
portfolio_hml <- BRIC.maindata[!is.na(pf.size) & !is.na(pf.bm)] %>% # this operator nests functions
group_by(Date,SIZE_VALUE) %>% # do "everything" for the groups specified here
summarize(ret.port = weighted.mean(RMRF,
LMV.USD)) %>% # vw returns using lagged mcap
spread(SIZE_VALUE,ret.port) %>% # create one column for each group
mutate(
Small = (Small.High + Small.Neutral + Small.Low)/3, # just exemplary
Big = (Big.High + Big.Neutral + Big.Low)/3,
SMB = Small-Big,
High = (Small.High + Big.High)/2,
Low = (Small.Low + Big.Low)/2,
HML = High-Low
)
portfolio_hml <- as.data.table(portfolio_hml)
portfolio_rmw <- BRIC.maindata[!is.na(pf.size) & !is.na(pf.opbe)] %>% # this operator nests functions
group_by(Date,SIZE_PROFITABILITY) %>% # do "everything" for the groups specified here
summarize(ret.port = weighted.mean(RMRF,
LMV.USD)) %>% # vw returns using lagged mcap
spread(SIZE_PROFITABILITY,ret.port) %>% # create one column for each group
mutate(
Small = (Small.Robust + Small.Neutral + Small.Weak)/3, # just exemplary
Big = (Big.Robust + Big.Neutral + Big.Weak)/3,
SMB = Small-Big,
Robust = (Small.Robust + Big.Robust)/2,
Weak = (Small.Weak + Big.Weak)/2,
RMW = Robust - Weak
)
portfolio_rmw <- as.data.table(portfolio_rmw)
portfolio_cma <- BRIC.maindata[!is.na(pf.size) & !is.na(pf.ac)] %>% # this operator nests functions
group_by(Date,SIZE_INVESTMENT) %>% # do "everything" for the groups specified here
summarize(ret.port = weighted.mean(RMRF,
LMV.USD)) %>% # vw returns using lagged mcap
spread(SIZE_INVESTMENT,ret.port) %>% # create one column for each group
mutate(
Small = (Small.Aggressive + Small.Neutral + Small.Conservative)/3, # just exemplary
Big = (Big.Aggressive + Big.Neutral + Big.Conservative)/3,
SMB = Small-Big,
Aggressive = (Small.Aggressive + Big.Aggressive)/2,
Conservative = (Small.Conservative + Big.Conservative)/2,
CMA = Conservative - Aggressive
)
portfolio_cma <- as.data.table(portfolio_cma)
factors <- inner_join(x = portfolio_hml, y = portfolio_rmw, by = "Date")
View(factors)
factors <- inner_join(x = factors, y = portfolio_cma, by = "Date")
View(factors)
factors <- subset(factors, select = c("Date","CMA","HML","RMW","SMB.x","SMB","SMB.y"))
portfolio_hml <- BRIC.maindata[!is.na(pf.size) & !is.na(pf.bm)] %>% # this operator nests functions
group_by(Date,SIZE_VALUE) %>% # do "everything" for the groups specified here
summarize(ret.port = weighted.mean(RMRF,
LMV.USD)) %>% # vw returns using lagged mcap
spread(SIZE_VALUE,ret.port) %>% # create one column for each group
mutate(
Small = (Small.High + Small.Neutral + Small.Low)/3, # just exemplary
Big = (Big.High + Big.Neutral + Big.Low)/3,
SMB_HML = Small-Big,
High = (Small.High + Big.High)/2,
Low = (Small.Low + Big.Low)/2,
HML = High-Low
)
portfolio_hml <- as.data.table(portfolio_hml)
portfolio_rmw <- BRIC.maindata[!is.na(pf.size) & !is.na(pf.opbe)] %>% # this operator nests functions
group_by(Date,SIZE_PROFITABILITY) %>% # do "everything" for the groups specified here
summarize(ret.port = weighted.mean(RMRF,
LMV.USD)) %>% # vw returns using lagged mcap
spread(SIZE_PROFITABILITY,ret.port) %>% # create one column for each group
mutate(
Small = (Small.Robust + Small.Neutral + Small.Weak)/3, # just exemplary
Big = (Big.Robust + Big.Neutral + Big.Weak)/3,
SMB_RMW = Small-Big,
Robust = (Small.Robust + Big.Robust)/2,
Weak = (Small.Weak + Big.Weak)/2,
RMW = Robust - Weak
)
portfolio_rmw <- as.data.table(portfolio_rmw)
portfolio_cma <- BRIC.maindata[!is.na(pf.size) & !is.na(pf.ac)] %>% # this operator nests functions
group_by(Date,SIZE_INVESTMENT) %>% # do "everything" for the groups specified here
summarize(ret.port = weighted.mean(RMRF,
LMV.USD)) %>% # vw returns using lagged mcap
spread(SIZE_INVESTMENT,ret.port) %>% # create one column for each group
mutate(
Small = (Small.Aggressive + Small.Neutral + Small.Conservative)/3, # just exemplary
Big = (Big.Aggressive + Big.Neutral + Big.Conservative)/3,
SMB_CMA = Small-Big,
Aggressive = (Small.Aggressive + Big.Aggressive)/2,
Conservative = (Small.Conservative + Big.Conservative)/2,
CMA = Conservative - Aggressive
)
portfolio_cma <- as.data.table(portfolio_cma)
factors <- inner_join(x = portfolio_hml, y = portfolio_rmw, by = "Date")
factors <- inner_join(x = factors, y = portfolio_cma, by = "Date")
factors <- subset(factors, select = c("Date","CMA","HML","RMW","SMB_HML","SMB_RMW","SMB_CMA"))
b <- ggplot(data = factors) + geom_line(aes(x = Date, y = SMB.x)) + geom_line(aes(x = Date, y = SMB, color="red")) + geom_line(aes(x = Date, y = SMB.y, color="blue"))
b
View(factors)
factors$SMB <- (factors$SMB_HML + factors$SMB_RMW + factors$SMB_CMA)/3)
factors$SMB <- ((factors$SMB_HML + factors$SMB_RMW + factors$SMB_CMA)/3)
View(factors)
summary(factors)
factors <- subset(factors, select = c("Date","CMA","HML","RMW","SMB"))
View(factors)
summary(factors)

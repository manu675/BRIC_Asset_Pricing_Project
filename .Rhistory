#sum(BRIC.maindata$MV.USD)
# 4.4 Benchmark (Value weighted) ----
# create copy
BRIC.benchmark <- BRIC.maindata
# filter on pf.size
BRIC.benchmark <- subset(BRIC.benchmark, pf.size == "Big" )
# value weight returns
## calculate monthly market value over all stocks
BRIC.benchmark.valueWeights <- aggregate(LMV.USD ~ ym, data = BRIC.benchmark, FUN = sum)
colnames(BRIC.benchmark.valueWeights)[2] <- "TotalValue"
## join value weights to stocks
BRIC.benchmark <- inner_join(x = BRIC.benchmark, y = BRIC.benchmark.valueWeights, by = "ym")
## calculate value weight
BRIC.benchmark$ValueWeight <- BRIC.benchmark$LMV.USD/BRIC.benchmark$TotalValue
## calculate value weight excess return / return
BRIC.benchmark$wRet <- BRIC.benchmark$ValueWeight*BRIC.benchmark$RET.USD
BRIC.benchmark$wExRet <- BRIC.benchmark$ValueWeight * BRIC.benchmark$RiRF
# per month
benchmark.retBricM <- aggregate(cbind(wRet,wExRet) ~ ym + hcjun, data = BRIC.benchmark,FUN = sum)
# per year
benchmark.retBricY <- aggregate(cbind(wRet,wExRet) ~ hcjun, data = benchmark.retBricM,FUN = mean)
## annualise
benchmark.retBricY$wRet <- benchmark.retBricY$wRet*12
benchmark.retBricY$wExRet <- benchmark.retBricY$wExRet*12
# per country
benchmark.retCountryM <- aggregate(cbind(wRet,wExRet) ~ country.x + ym + hcjun, data = BRIC.benchmark,FUN = sum)
# per year
benchmark.retCountryY <- aggregate(cbind(wRet,wExRet) ~ country.x + hcjun, data = benchmark.retCountryM,FUN = mean)
## annualise
benchmark.retCountryY$wRet <- benchmark.retCountryY$wRet*12
benchmark.retCountryY$wExRet <- benchmark.retCountryY$wExRet*12
# single dataframe
benchmark_BRIC <- inner_join(benchmark.retBricY,benchmark.retBricM,by = "hcjun")
benchmark_Country <- inner_join(benchmark.retCountryY,benchmark.retCountryM,by = c("hcjun","country.x"))
# rename columns
colnames(benchmark_BRIC)[2] <- "YearlyReturn"
colnames(benchmark_BRIC)[3] <- "YearlyExcessReturn"
colnames(benchmark_BRIC)[5] <- "MonthlyReturn"
colnames(benchmark_BRIC)[6] <- "MonthlyExcessReturn"
colnames(benchmark_Country)[3] <- "YearlyReturn"
colnames(benchmark_Country)[4] <- "YearlyExcessReturn"
colnames(benchmark_Country)[6] <- "MonthlyReturn"
colnames(benchmark_Country)[7] <- "MonthlyExcessReturn"
# 4.5 Market (Excess) Return ----
# create copy
BRIC.market <- BRIC.maindata
# value weight returns
## calculate monthly market value over all stocks
BRIC.market.valueWeights <- aggregate(LMV.USD ~ ym, data = BRIC.market, FUN = sum)
colnames(BRIC.market.valueWeights)[2] <- "TotalValue"
## join value weights to stocks
BRIC.market <- inner_join(x = BRIC.market, y = BRIC.market.valueWeights, by = "ym")
## calculate value weight
BRIC.market$ValueWeight <- BRIC.market$LMV.USD/BRIC.market$TotalValue
## calculate value weight excess return / return
BRIC.market$wRet <- BRIC.market$ValueWeight*BRIC.market$RET.USD
BRIC.market$wExRet <- BRIC.market$ValueWeight * BRIC.market$RiRF
# per month
market.retBricM <- aggregate(cbind(wRet,wExRet) ~ ym + hcjun, data = BRIC.market,FUN = sum)
# per year
market.retBricY <- aggregate(cbind(wRet,wExRet) ~ hcjun, data = market.retBricM,FUN = mean)
## annualise
market.retBricY$wRet <- market.retBricY$wRet*12
market.retBricY$wExRet <- market.retBricY$wExRet*12
# per country
market.retCountryM <- aggregate(cbind(wRet,wExRet) ~ country.x + ym + hcjun, data = BRIC.market,FUN = sum)
# per year
market.retCountryY <- aggregate(cbind(wRet,wExRet) ~ country.x + hcjun, data = market.retCountryM,FUN = mean)
## annualise
market.retCountryY$wRet <- market.retCountryY$wRet*12
market.retCountryY$wExRet <- market.retCountryY$wExRet*12
# single dataframe
market_BRIC <- inner_join(market.retBricY,market.retBricM,by = "hcjun")
market_Country <- inner_join(market.retCountryY,market.retCountryM,by = c("hcjun","country.x"))
# rename columns
colnames(market_BRIC)[2] <- "YearlyReturn"
colnames(market_BRIC)[3] <- "YearlyExcessReturn"
colnames(market_BRIC)[5] <- "MonthlyReturn"
colnames(market_BRIC)[6] <- "MonthlyExcessReturn"
colnames(market_Country)[3] <- "YearlyReturn"
colnames(market_Country)[4] <- "YearlyExcessReturn"
colnames(market_Country)[6] <- "MonthlyReturn"
colnames(market_Country)[7] <- "MonthlyExcessReturn"
# 4.6.1 HML: Determine B/M breakpoints ----
# Determine the B/M breakpoints based on big stocks only
hlpvariable2 <- BRIC.maindata[month==7 & !is.na(BM) & pf.size=="Big", .(bm_bb30 = quantile(BM , probs = c(0.3), na.rm=T),
bm_bb70 = quantile(BM , probs = c(0.7), na.rm=T)),by=year]
# Merge the B/M portfolio allocation back from July Y to June Y+1
BRIC.maindata <- merge(BRIC.maindata,hlpvariable2,
by.x=c("hcjun"),
by.y=c("year"),
all.x=T)
BRIC.maindata[ , pf.bm := ifelse(BM>bm_bb70,"High",ifelse((BM<=bm_bb70 & BM>bm_bb30),"Neutral",ifelse(BM<=bm_bb30,"Low",NA)))]
BRIC.maindata[, SIZE_VALUE := paste0(pf.size,".",pf.bm)]
# 4.6.2 HML_Devil: ----
# Determine the B/M_Devil breakpoints based on big stocks only
hlpvariable2 <- BRIC.maindata[month==7 & !is.na(BM_Devil) & pf.size=="Big", .(bmdevil_bb30 = quantile(BM_Devil , probs = c(0.3), na.rm=T),
bmdevil_bb70 = quantile(BM_Devil , probs = c(0.7), na.rm=T)),by=year]
# Merge the B/M_Devil portfolio allocation back from July Y to June Y+1
BRIC.maindata <- merge(BRIC.maindata,hlpvariable2,
by.x=c("hcjun"),
by.y=c("year"),
all.x=T)
BRIC.maindata[ , pf.bmdevil := ifelse(BM_Devil>bmdevil_bb70,"High",ifelse((BM_Devil<=bmdevil_bb70 & BM_Devil>bmdevil_bb30),"Neutral",ifelse(BM_Devil<=bmdevil_bb30,"Low",NA)))]
BRIC.maindata[, SIZE_VALUE_D := paste0(pf.size,".",pf.bmdevil)]
# 4.7 RMW: Determine OP/BE breakpoints ----
# Determine the OP/BE breakpoints based on big stocks only
hlpvariable2 <- BRIC.maindata[month==7 & !is.na(OPBE) & pf.size=="Big", .(opbe_bb30 = quantile(OPBE , probs = c(0.3), na.rm=T),
opbe_bb70 = quantile(OPBE , probs = c(0.7), na.rm=T)),by=year]
# Merge the OP/BE portfolio allocation back from July Y to June Y+1
BRIC.maindata <- merge(BRIC.maindata,hlpvariable2,
by.x=c("hcjun"),
by.y=c("year"),
all.x=T)
# 3 OP/BE brackets: Robust, Neutral and Weak
BRIC.maindata[ , pf.opbe := ifelse(OPBE>opbe_bb70,"Robust",ifelse((OPBE<=opbe_bb70 & OPBE>opbe_bb30),"Neutral",ifelse(OPBE<=opbe_bb30,"Weak",NA)))]
BRIC.maindata[, SIZE_PROFITABILITY := paste0(pf.size,".",pf.opbe)]
# 4.8 CMA: Determine Asset Change Breakpoints ----
#investment: As in Cooper et al. (2008), we measure asset growth in June of year y as the percentage change in total assets (WC02999) from fiscal year ending in calendar year y−2 to fiscal year ending in calendar year y−1.
# Determine the AC breakpoints based on big stocks only
hlpvariable2 <- BRIC.maindata[month==7 & !is.na(AssetGrowth) & pf.size=="Big", .(ac_bb30 = quantile(AssetGrowth , probs = c(0.3), na.rm=T),
ac_bb70 = quantile(AssetGrowth , probs = c(0.7), na.rm=T)),by=year]
# Merge the AC portfolio allocation back from July Y to June Y+1
BRIC.maindata <- merge(BRIC.maindata,hlpvariable2,
by.x=c("hcjun"),
by.y=c("year"),
all.x=T)
# 3 investment brackets: Aggressive, neutral and conservative
BRIC.maindata[ , pf.ac := ifelse(AssetGrowth>ac_bb70,"Aggressive",ifelse((AssetGrowth<=ac_bb70 & AssetGrowth>ac_bb30),"Neutral",ifelse(AssetGrowth<=ac_bb30,"Conservative",NA)))]
BRIC.maindata[, SIZE_INVESTMENT := paste0(pf.size,".",pf.ac)]
# HML ----
portfolio_hml <- BRIC.maindata[!is.na(pf.size) & !is.na(pf.bm)] %>% # this operator nests functions
group_by(ym,SIZE_VALUE) %>% # do "everything" for the groups specified here
summarize(ret.port = weighted.mean(RET.USD,
LMV.USD)) %>% # vw returns using lagged mcap
spread(SIZE_VALUE,ret.port) %>% # create one column for each group
mutate(
Small = (Small.High + Small.Neutral + Small.Low)/3, # just exemplary
Big = (Big.High + Big.Neutral + Big.Low)/3,
SMB_HML = Small-Big,
High = (Small.High + Big.High)/2,
Low = (Small.Low + Big.Low)/2,
HML = High-Low
)
portfolio_hml <- as.data.table(portfolio_hml)
# HML_Devil ----
portfolio_hmldevil <- BRIC.maindata[!is.na(pf.size) & !is.na(pf.bmdevil)] %>% # this operator nests functions
group_by(ym,SIZE_VALUE_D) %>% # do "everything" for the groups specified here
summarize(ret.port = weighted.mean(RET.USD,
LMV.USD)) %>% # vw returns using lagged mcap
spread(SIZE_VALUE_D,ret.port) %>% # create one column for each group
mutate(
Small = (Small.High + Small.Neutral + Small.Low)/3, # just exemplary
Big = (Big.High + Big.Neutral + Big.Low)/3,
SMB_HML_DEVIL = Small-Big,
High = (Small.High + Big.High)/2,
Low = (Small.Low + Big.Low)/2,
HML_DEVIL = High-Low
)
portfolio_hmldevil <- as.data.table(portfolio_hmldevil)
# RMW ----
portfolio_rmw <- BRIC.maindata[!is.na(pf.size) & !is.na(pf.opbe)] %>% # this operator nests functions
group_by(ym,SIZE_PROFITABILITY) %>% # do "everything" for the groups specified here
summarize(ret.port = weighted.mean(RET.USD,
LMV.USD)) %>% # vw returns using lagged mcap
spread(SIZE_PROFITABILITY,ret.port) %>% # create one column for each group
mutate(
Small = (Small.Robust + Small.Neutral + Small.Weak)/3, # just exemplary
Big = (Big.Robust + Big.Neutral + Big.Weak)/3,
SMB_RMW = Small-Big,
Robust = (Small.Robust + Big.Robust)/2,
Weak = (Small.Weak + Big.Weak)/2,
RMW = Robust - Weak
)
portfolio_rmw <- as.data.table(portfolio_rmw)
# CMA ----
portfolio_cma <- BRIC.maindata[!is.na(pf.size) & !is.na(pf.ac)] %>% # this operator nests functions
group_by(ym,SIZE_INVESTMENT) %>% # do "everything" for the groups specified here
summarize(ret.port = weighted.mean(RET.USD,
LMV.USD)) %>% # vw returns using lagged mcap
spread(SIZE_INVESTMENT,ret.port) %>% # create one column for each group
mutate(
Small = (Small.Aggressive + Small.Neutral + Small.Conservative)/3, # just exemplary
Big = (Big.Aggressive + Big.Neutral + Big.Conservative)/3,
SMB_CMA = Small-Big,
Aggressive = (Small.Aggressive + Big.Aggressive)/2,
Conservative = (Small.Conservative + Big.Conservative)/2,
CMA = Conservative - Aggressive
)
portfolio_cma <- as.data.table(portfolio_cma)
# MOM ----
portfolio_mom <- BRIC.maindata[!is.na(pf.momentum)] %>%
group_by(ym,pf.momentum) %>%
summarize(ret.port = weighted.mean(RET.USD,
LMV.USD)) %>%
spread(pf.momentum,ret.port) %>%
mutate(
MOM = Winner - Looser
)
portfolio_mom <- as.data.table(portfolio_mom)
factors <- inner_join(x = portfolio_hml, y = portfolio_rmw, by = "ym")
factors <- inner_join(x = factors, y = portfolio_cma, by = "ym")
factors <- inner_join(x = factors, y = portfolio_mom, by = "ym")
factors <- inner_join(x = factors, y = portfolio_hmldevil, by = "ym")
factors <- inner_join(x = factors, y = market.retBricM, by = "ym")
colnames(factors)[55] <- "RMRF"
factors <- subset(factors, select = c("ym","RMRF","CMA","HML","HML_DEVIL","RMW","SMB_HML","SMB_RMW","SMB_CMA","MOM"))
factors$SMB <- ((factors$SMB_HML + factors$SMB_RMW + factors$SMB_CMA)/3)
factors <- subset(factors, select = c("ym","RMRF","SMB","HML","HML_DEVIL","RMW","CMA","MOM"))
#summary(factors)
#summary(BRIC.maindata$BM)
xtable(summary(factors))
View(BRIC.maindata)
View(factors)
xtable(summary(factors))
xtable(summary(factors))
summary(factors)
factors
mean(factors$HML_DEVIL)
mean(factors$SMB)
max(factors$SMB)
max(factors$ym)
# join factors, strategy and benchmark ----
spanning <- left_join(x = factors, y = strategy.retBricM, by = "ym")
colnames(spanning)[10] <- "Strategy_RET"
colnames(spanning)[11] <- "Strategy_RiRF"
# correlation matrix between factors
head(spanning)
dim(spanning) # 280 (24 years * 12 months) x 5
## cor(spanning[,-"ym"]) # correlation matrix between factors for the BRIC region
summary(spanning) # to use for a table
xtable(summary(spanning))
# Spanning Tests ----
ff3fm <- lm(data=spanning, formula = Strategy_RET ~ RMRF + SMB + HML)
summary(ff3fm)
## FF5FM
ff5fm <- lm(data=spanning, formula = Strategy_RET ~ RMRF + SMB + HML + CMA + RMW)
summary(ff5fm)
## FF3FM + MOM
ff3fm_mom <- lm(data=spanning, formula = Strategy_RET ~ RMRF + SMB + HML + MOM)
summary(ff3fm_mom)
## FF5FM + MOM
ff5fm_mom <- lm(data=spanning, formula = Strategy_RET ~ RMRF + SMB + HML + CMA + RMW + MOM)
summary(ff5fm_mom)
## FF5FM + MOM with HML_DEVIL
ff5fm_mom_hmldevil <- lm(data=spanning, formula = Strategy_RET ~ RMRF + SMB + HML_DEVIL + CMA + RMW + MOM)
summary(ff5fm_mom_hmldevil)
# exporting the regression to tex
library(texreg)
texreg(list(ff3fm,ff3fm_mom,ff5fm, ff5fm_mom,ff5fm_mom_hmldevil), booktabs = T, fontsize="small", custom.model.names = c("FF3FM","FF3FM + Mom", "FF5FM", "FF5FM + Mom","FF5FM(HML_DEV) + MOM"))
# correlation matrix between factors for the BRIC region
cor_mat <- cor(spanning[,c("RMRF","SMB","HML","HML_DEVIL","CMA","RMW","MOM")])
#Returns a matrix of logicals the same size of a given matrix with entries TRUE in the lower triangle.
upper.tri(x=cor_mat, diag = TRUE)
# Hide upper triangle
upper <- cor_mat
upper[upper.tri(cor_mat)]<-""
upper <- as.data.frame(upper)
upper
# exporting the correlation table to tex
library(xtable)
xtable(upper)
xtable(summary(spanning))
texreg(list(ff3fm,ff3fm_mom,ff5fm, ff5fm_mom,ff5fm_mom_hmldevil), booktabs = T, fontsize="small", custom.model.names = c("FF3FM","FF3FM + Mom", "FF5FM", "FF5FM + Mom","FF5FM(HML_DEV) + MOM"))
load("~/BRIC_Asset_Pricing_Project/descriptive_statistics.RData")
View(descriptive_statistics)
xtable(descriptive_statistics)
BRIC.maindata <- inner_join(x = BRIC.monthly,y = BRIC.yearly, by = c("Id","hcjun" = "hcdec"))
# Add a B/M column
BRIC.maindata$BM_Devil <- BRIC.maindata$BookEquity / BRIC.maindata$MV
# Add a OP/BE column
BRIC.maindata$OPBE <- BRIC.maindata$OperatingProfits / BRIC.maindata$BookEquity
# Add a AssetGrowth column
BRIC.maindata$AssetGrowth <- ((BRIC.maindata$TotalAssets - BRIC.maindata$TotalAssetsBefore)/BRIC.maindata$TotalAssetsBefore)
# we only look at data after July 1996
BRIC.maindata <- subset(BRIC.maindata, hcjun >= "1996")
BRIC.maindata$BM <- BRIC.maindata$BookEquity / BRIC.maindata$MV.December
#summary(BRIC.maindata)
deStats <- BRIC.maindata
#deStats <- subset(deStats, pf.size == "Big" )
# BRIC
tu <- aggregate(Id ~ ym, data = deStats, FUN=function(x) length(unique(x)))
fu <- aggregate(MV.USD ~ ym, data = deStats, FUN=sum)
BRIC_descriptiveStats <- rbind(length(unique(deStats$Id)),min(tu$Id),round(mean(tu$Id),digits = 2),max(tu$Id),format(mean(fu$MV.USD),scientific = TRUE),format(median(fu$MV.USD),scientific = TRUE),format(sum(deStats$MV.USD),scientific = TRUE),100,as.character(min(tu$ym)),as.character(max(tu$ym)))
colnames(BRIC_descriptiveStats)[1] <- "BRIC"
colnames(BRIC_descriptiveStats)[1] <- "BRIC"
# countrywise
wu <- aggregate(Id ~ country.x, data = deStats, FUN=function(x) length(unique(x)))
zu <- aggregate(Id ~ ym + country.x, data = deStats, FUN=function(x) length(unique(x))) # check individually
su <- aggregate(MV.USD ~ ym + country.x, data = deStats, FUN=sum)
# BRA
wu_BRA <- subset(wu,country.x == "BRA")
zu_BRA <- subset(zu,country.x == "BRA")
su_BRA <- subset(su,country.x == "BRA")
BRA <- rbind(wu_BRA$Id,min(zu_BRA$Id),round(mean(zu_BRA$Id),digits = 2),max(zu_BRA$Id),format(mean(su_BRA$MV.USD),scientific = TRUE),format(median(su_BRA$MV.USD),scientific = TRUE),format(sum(su_BRA$MV.USD),scientific = TRUE),round(as.double((sum(su_BRA$MV.USD)*100)/sum(deStats$MV.USD)),digits = 2),as.character(min(su_BRA$ym)),as.character(max(su_BRA$ym)))
colnames(BRA)[1] <- "Brazil"
# RUS
wu_RUS <- subset(wu,country.x == "RUS")
zu_RUS <- subset(zu,country.x == "RUS")
su_RUS <- subset(su,country.x == "RUS")
RUS <- rbind(wu_RUS$Id,min(zu_RUS$Id),round(mean(zu_RUS$Id),digits = 2),max(zu_RUS$Id),format(mean(su_RUS$MV.USD),scientific = TRUE),format(median(su_RUS$MV.USD),scientific = TRUE),format(sum(su_RUS$MV.USD),scientific = TRUE),round(as.double((sum(su_RUS$MV.USD)*100)/sum(deStats$MV.USD)),digits = 2),as.character(min(su_RUS$ym)),as.character(max(su_RUS$ym)))
colnames(RUS)[1] <- "Russia"
# IND
wu_IND <- subset(wu,country.x == "IND")
zu_IND <- subset(zu,country.x == "IND")
su_IND <- subset(su,country.x == "IND")
IND <- rbind(wu_IND$Id,min(zu_IND$Id),round(mean(zu_IND$Id),digits = 2),max(zu_IND$Id),format(mean(su_IND$MV.USD),scientific = TRUE),format(median(su_IND$MV.USD),scientific = TRUE),format(sum(su_IND$MV.USD),scientific = TRUE),round(as.double((sum(su_IND$MV.USD)*100)/sum(deStats$MV.USD)),digits = 2),as.character(min(su_IND$ym)),as.character(max(su_IND$ym)))
colnames(IND)[1] <- "India"
# CHN
wu_CHN <- subset(wu,country.x == "CHN")
zu_CHN <- subset(zu,country.x == "CHN")
su_CHN <- subset(su,country.x == "CHN")
CHN <- rbind(wu_CHN$Id,min(zu_CHN$Id),round(mean(zu_CHN$Id),digits = 2),max(zu_CHN$Id),format(mean(su_CHN$MV.USD),scientific = TRUE),format(median(su_CHN$MV.USD),scientific = TRUE),format(sum(su_CHN$MV.USD),scientific = TRUE),round(as.double((sum(su_CHN$MV.USD)*100)/sum(deStats$MV.USD)),digits = 2),as.character(min(su_CHN$ym)),as.character(max(su_CHN$ym)))
colnames(CHN)[1] <- "China"
# one data frame
descriptive_statistics <- cbind(BRIC_descriptiveStats,BRA,RUS,IND,CHN)
rownames(descriptive_statistics)[1:10] <- rbind("Total no. firms","Min no. firms","Mean no. firms","Max no. firms","Mean size in USD","Median size in USD","Total size in USD","% of total size","Start ym","End ym")
descriptive_statistics <- as.data.frame(descriptive_statistics)
library("writexl")
save(descriptive_statistics,file = "descriptive_statistics.RData")
write_xlsx(descriptive_statistics,"descriptive_statistics.xlsx")
xtable(descriptive_statistics)
View(descriptive_statistics)
setorder(BRIC.maindata,Date,-MV.USD.June)
hlpvariable <-  BRIC.maindata[month==7 & !is.na(MV.USD.June),
.(pf.size = ifelse((cumsum(MV.USD.June)/sum(MV.USD.June))>=0.97,"Micro",ifelse((cumsum(MV.USD.June)/sum(MV.USD.June))>=0.90,"Small","Big")),Id),
by=year]
# Merge the size portfolio allocation back from July Y to June Y+1
BRIC.maindata <- merge(BRIC.maindata,hlpvariable,
by.x=c("hcjun","Id"),
by.y=c("year","Id"),
all.x=T)
# delete NA's (only about 1000 rows)
BRIC.maindata <- na.omit(BRIC.maindata,cols = "pf.size")
deStats <- BRIC.maindata
#deStats <- subset(deStats, pf.size == "Big" )
# BRIC
tu <- aggregate(Id ~ ym, data = deStats, FUN=function(x) length(unique(x)))
fu <- aggregate(MV.USD ~ ym, data = deStats, FUN=sum)
BRIC_descriptiveStats <- rbind(length(unique(deStats$Id)),min(tu$Id),round(mean(tu$Id),digits = 2),max(tu$Id),format(mean(fu$MV.USD),scientific = TRUE),format(median(fu$MV.USD),scientific = TRUE),format(sum(deStats$MV.USD),scientific = TRUE),100,as.character(min(tu$ym)),as.character(max(tu$ym)))
colnames(BRIC_descriptiveStats)[1] <- "BRIC"
colnames(BRIC_descriptiveStats)[1] <- "BRIC"
# countrywise
wu <- aggregate(Id ~ country.x, data = deStats, FUN=function(x) length(unique(x)))
zu <- aggregate(Id ~ ym + country.x, data = deStats, FUN=function(x) length(unique(x))) # check individually
su <- aggregate(MV.USD ~ ym + country.x, data = deStats, FUN=sum)
# BRA
wu_BRA <- subset(wu,country.x == "BRA")
zu_BRA <- subset(zu,country.x == "BRA")
su_BRA <- subset(su,country.x == "BRA")
BRA <- rbind(wu_BRA$Id,min(zu_BRA$Id),round(mean(zu_BRA$Id),digits = 2),max(zu_BRA$Id),format(mean(su_BRA$MV.USD),scientific = TRUE),format(median(su_BRA$MV.USD),scientific = TRUE),format(sum(su_BRA$MV.USD),scientific = TRUE),round(as.double((sum(su_BRA$MV.USD)*100)/sum(deStats$MV.USD)),digits = 2),as.character(min(su_BRA$ym)),as.character(max(su_BRA$ym)))
colnames(BRA)[1] <- "Brazil"
# RUS
wu_RUS <- subset(wu,country.x == "RUS")
zu_RUS <- subset(zu,country.x == "RUS")
su_RUS <- subset(su,country.x == "RUS")
RUS <- rbind(wu_RUS$Id,min(zu_RUS$Id),round(mean(zu_RUS$Id),digits = 2),max(zu_RUS$Id),format(mean(su_RUS$MV.USD),scientific = TRUE),format(median(su_RUS$MV.USD),scientific = TRUE),format(sum(su_RUS$MV.USD),scientific = TRUE),round(as.double((sum(su_RUS$MV.USD)*100)/sum(deStats$MV.USD)),digits = 2),as.character(min(su_RUS$ym)),as.character(max(su_RUS$ym)))
colnames(RUS)[1] <- "Russia"
# IND
wu_IND <- subset(wu,country.x == "IND")
zu_IND <- subset(zu,country.x == "IND")
su_IND <- subset(su,country.x == "IND")
IND <- rbind(wu_IND$Id,min(zu_IND$Id),round(mean(zu_IND$Id),digits = 2),max(zu_IND$Id),format(mean(su_IND$MV.USD),scientific = TRUE),format(median(su_IND$MV.USD),scientific = TRUE),format(sum(su_IND$MV.USD),scientific = TRUE),round(as.double((sum(su_IND$MV.USD)*100)/sum(deStats$MV.USD)),digits = 2),as.character(min(su_IND$ym)),as.character(max(su_IND$ym)))
colnames(IND)[1] <- "India"
# CHN
wu_CHN <- subset(wu,country.x == "CHN")
zu_CHN <- subset(zu,country.x == "CHN")
su_CHN <- subset(su,country.x == "CHN")
CHN <- rbind(wu_CHN$Id,min(zu_CHN$Id),round(mean(zu_CHN$Id),digits = 2),max(zu_CHN$Id),format(mean(su_CHN$MV.USD),scientific = TRUE),format(median(su_CHN$MV.USD),scientific = TRUE),format(sum(su_CHN$MV.USD),scientific = TRUE),round(as.double((sum(su_CHN$MV.USD)*100)/sum(deStats$MV.USD)),digits = 2),as.character(min(su_CHN$ym)),as.character(max(su_CHN$ym)))
colnames(CHN)[1] <- "China"
# one data frame
descriptive_statistics <- cbind(BRIC_descriptiveStats,BRA,RUS,IND,CHN)
rownames(descriptive_statistics)[1:10] <- rbind("Total no. firms","Min no. firms","Mean no. firms","Max no. firms","Mean size in USD","Median size in USD","Total size in USD","% of total size","Start ym","End ym")
descriptive_statistics <- as.data.frame(descriptive_statistics)
library("writexl")
save(descriptive_statistics,file = "descriptive_statistics.RData")
write_xlsx(descriptive_statistics,"descriptive_statistics.xlsx")
xtable(descriptive_statistics)
BRIC.maindata <- filter(BRIC.maindata,BRIC.maindata$pf.size != "Micro")
deStats <- BRIC.maindata
'deStats <- subset(deStats, pf.size == "Big" )
# BRIC
tu <- aggregate(Id ~ ym, data = deStats, FUN=function(x) length(unique(x)))
fu <- aggregate(MV.USD ~ ym, data = deStats, FUN=sum)
BRIC_descriptiveStats <- rbind(length(unique(deStats$Id)),min(tu$Id),round(mean(tu$Id),digits = 2),max(tu$Id),format(mean(fu$MV.USD),scientific = TRUE),format(median(fu$MV.USD),scientific = TRUE),format(sum(deStats$MV.USD),scientific = TRUE),100,as.character(min(tu$ym)),as.character(max(tu$ym)))
colnames(BRIC_descriptiveStats)[1] <- "BRIC"
colnames(BRIC_descriptiveStats)[1] <- "BRIC"
# countrywise
wu <- aggregate(Id ~ country.x, data = deStats, FUN=function(x) length(unique(x)))
zu <- aggregate(Id ~ ym + country.x, data = deStats, FUN=function(x) length(unique(x))) # check individually
su <- aggregate(MV.USD ~ ym + country.x, data = deStats, FUN=sum)
# BRA
wu_BRA <- subset(wu,country.x == "BRA")
zu_BRA <- subset(zu,country.x == "BRA")
su_BRA <- subset(su,country.x == "BRA")
BRA <- rbind(wu_BRA$Id,min(zu_BRA$Id),round(mean(zu_BRA$Id),digits = 2),max(zu_BRA$Id),format(mean(su_BRA$MV.USD),scientific = TRUE),format(median(su_BRA$MV.USD),scientific = TRUE),format(sum(su_BRA$MV.USD),scientific = TRUE),round(as.double((sum(su_BRA$MV.USD)*100)/sum(deStats$MV.USD)),digits = 2),as.character(min(su_BRA$ym)),as.character(max(su_BRA$ym)))
colnames(BRA)[1] <- "Brazil"
# RUS
wu_RUS <- subset(wu,country.x == "RUS")
zu_RUS <- subset(zu,country.x == "RUS")
su_RUS <- subset(su,country.x == "RUS")
RUS <- rbind(wu_RUS$Id,min(zu_RUS$Id),round(mean(zu_RUS$Id),digits = 2),max(zu_RUS$Id),format(mean(su_RUS$MV.USD),scientific = TRUE),format(median(su_RUS$MV.USD),scientific = TRUE),format(sum(su_RUS$MV.USD),scientific = TRUE),round(as.double((sum(su_RUS$MV.USD)*100)/sum(deStats$MV.USD)),digits = 2),as.character(min(su_RUS$ym)),as.character(max(su_RUS$ym)))
colnames(RUS)[1] <- "Russia"
# IND
wu_IND <- subset(wu,country.x == "IND")
zu_IND <- subset(zu,country.x == "IND")
su_IND <- subset(su,country.x == "IND")
IND <- rbind(wu_IND$Id,min(zu_IND$Id),round(mean(zu_IND$Id),digits = 2),max(zu_IND$Id),format(mean(su_IND$MV.USD),scientific = TRUE),format(median(su_IND$MV.USD),scientific = TRUE),format(sum(su_IND$MV.USD),scientific = TRUE),round(as.double((sum(su_IND$MV.USD)*100)/sum(deStats$MV.USD)),digits = 2),as.character(min(su_IND$ym)),as.character(max(su_IND$ym)))
colnames(IND)[1] <- "India"
# CHN
wu_CHN <- subset(wu,country.x == "CHN")
zu_CHN <- subset(zu,country.x == "CHN")
su_CHN <- subset(su,country.x == "CHN")
CHN <- rbind(wu_CHN$Id,min(zu_CHN$Id),round(mean(zu_CHN$Id),digits = 2),max(zu_CHN$Id),format(mean(su_CHN$MV.USD),scientific = TRUE),format(median(su_CHN$MV.USD),scientific = TRUE),format(sum(su_CHN$MV.USD),scientific = TRUE),round(as.double((sum(su_CHN$MV.USD)*100)/sum(deStats$MV.USD)),digits = 2),as.character(min(su_CHN$ym)),as.character(max(su_CHN$ym)))
colnames(CHN)[1] <- "China"
# one data frame
descriptive_statistics <- cbind(BRIC_descriptiveStats,BRA,RUS,IND,CHN)
rownames(descriptive_statistics)[1:10] <- rbind("Total no. firms","Min no. firms","Mean no. firms","Max no. firms","Mean size in USD","Median size in USD","Total size in USD","% of total size","Start ym","End ym")
descriptive_statistics <- as.data.frame(descriptive_statistics)
library("writexl")
save(descriptive_statistics,file = "descriptive_statistics.RData")
write_xlsx(descriptive_statistics,"descriptive_statistics.xlsx")
xtable(descriptive_statistics)
deStats <- BRIC.maindata
'deStats <- subset(deStats, pf.size == "Big" )
# BRIC
tu <- aggregate(Id ~ ym, data = deStats, FUN=function(x) length(unique(x)))
fu <- aggregate(MV.USD ~ ym, data = deStats, FUN=sum)
BRIC_descriptiveStats <- rbind(length(unique(deStats$Id)),min(tu$Id),round(mean(tu$Id),digits = 2),max(tu$Id),format(mean(fu$MV.USD),scientific = TRUE),format(median(fu$MV.USD),scientific = TRUE),format(sum(deStats$MV.USD),scientific = TRUE),100,as.character(min(tu$ym)),as.character(max(tu$ym)))
colnames(BRIC_descriptiveStats)[1] <- "BRIC"
colnames(BRIC_descriptiveStats)[1] <- "BRIC"
# countrywise
wu <- aggregate(Id ~ country.x, data = deStats, FUN=function(x) length(unique(x)))
zu <- aggregate(Id ~ ym + country.x, data = deStats, FUN=function(x) length(unique(x))) # check individually
su <- aggregate(MV.USD ~ ym + country.x, data = deStats, FUN=sum)
# BRA
wu_BRA <- subset(wu,country.x == "BRA")
zu_BRA <- subset(zu,country.x == "BRA")
su_BRA <- subset(su,country.x == "BRA")
BRA <- rbind(wu_BRA$Id,min(zu_BRA$Id),round(mean(zu_BRA$Id),digits = 2),max(zu_BRA$Id),format(mean(su_BRA$MV.USD),scientific = TRUE),format(median(su_BRA$MV.USD),scientific = TRUE),format(sum(su_BRA$MV.USD),scientific = TRUE),round(as.double((sum(su_BRA$MV.USD)*100)/sum(deStats$MV.USD)),digits = 2),as.character(min(su_BRA$ym)),as.character(max(su_BRA$ym)))
colnames(BRA)[1] <- "Brazil"
# RUS
wu_RUS <- subset(wu,country.x == "RUS")
zu_RUS <- subset(zu,country.x == "RUS")
su_RUS <- subset(su,country.x == "RUS")
RUS <- rbind(wu_RUS$Id,min(zu_RUS$Id),round(mean(zu_RUS$Id),digits = 2),max(zu_RUS$Id),format(mean(su_RUS$MV.USD),scientific = TRUE),format(median(su_RUS$MV.USD),scientific = TRUE),format(sum(su_RUS$MV.USD),scientific = TRUE),round(as.double((sum(su_RUS$MV.USD)*100)/sum(deStats$MV.USD)),digits = 2),as.character(min(su_RUS$ym)),as.character(max(su_RUS$ym)))
colnames(RUS)[1] <- "Russia"
# IND
wu_IND <- subset(wu,country.x == "IND")
zu_IND <- subset(zu,country.x == "IND")
su_IND <- subset(su,country.x == "IND")
IND <- rbind(wu_IND$Id,min(zu_IND$Id),round(mean(zu_IND$Id),digits = 2),max(zu_IND$Id),format(mean(su_IND$MV.USD),scientific = TRUE),format(median(su_IND$MV.USD),scientific = TRUE),format(sum(su_IND$MV.USD),scientific = TRUE),round(as.double((sum(su_IND$MV.USD)*100)/sum(deStats$MV.USD)),digits = 2),as.character(min(su_IND$ym)),as.character(max(su_IND$ym)))
colnames(IND)[1] <- "India"
# CHN
wu_CHN <- subset(wu,country.x == "CHN")
zu_CHN <- subset(zu,country.x == "CHN")
su_CHN <- subset(su,country.x == "CHN")
CHN <- rbind(wu_CHN$Id,min(zu_CHN$Id),round(mean(zu_CHN$Id),digits = 2),max(zu_CHN$Id),format(mean(su_CHN$MV.USD),scientific = TRUE),format(median(su_CHN$MV.USD),scientific = TRUE),format(sum(su_CHN$MV.USD),scientific = TRUE),round(as.double((sum(su_CHN$MV.USD)*100)/sum(deStats$MV.USD)),digits = 2),as.character(min(su_CHN$ym)),as.character(max(su_CHN$ym)))
colnames(CHN)[1] <- "China"
# one data frame
descriptive_statistics <- cbind(BRIC_descriptiveStats,BRA,RUS,IND,CHN)
rownames(descriptive_statistics)[1:10] <- rbind("Total no. firms","Min no. firms","Mean no. firms","Max no. firms","Mean size in USD","Median size in USD","Total size in USD","% of total size","Start ym","End ym")
descriptive_statistics <- as.data.frame(descriptive_statistics)
library("writexl")
save(descriptive_statistics,file = "descriptive_statistics.RData")
write_xlsx(descriptive_statistics,"descriptive_statistics.xlsx")
xtable(descriptive_statistics)
deStats <- BRIC.maindata
#deStats <- subset(deStats, pf.size == "Big" )
# BRIC
tu <- aggregate(Id ~ ym, data = deStats, FUN=function(x) length(unique(x)))
fu <- aggregate(MV.USD ~ ym, data = deStats, FUN=sum)
BRIC_descriptiveStats <- rbind(length(unique(deStats$Id)),min(tu$Id),round(mean(tu$Id),digits = 2),max(tu$Id),format(mean(fu$MV.USD),scientific = TRUE),format(median(fu$MV.USD),scientific = TRUE),format(sum(deStats$MV.USD),scientific = TRUE),100,as.character(min(tu$ym)),as.character(max(tu$ym)))
colnames(BRIC_descriptiveStats)[1] <- "BRIC"
colnames(BRIC_descriptiveStats)[1] <- "BRIC"
# countrywise
wu <- aggregate(Id ~ country.x, data = deStats, FUN=function(x) length(unique(x)))
zu <- aggregate(Id ~ ym + country.x, data = deStats, FUN=function(x) length(unique(x))) # check individually
su <- aggregate(MV.USD ~ ym + country.x, data = deStats, FUN=sum)
# BRA
wu_BRA <- subset(wu,country.x == "BRA")
zu_BRA <- subset(zu,country.x == "BRA")
su_BRA <- subset(su,country.x == "BRA")
BRA <- rbind(wu_BRA$Id,min(zu_BRA$Id),round(mean(zu_BRA$Id),digits = 2),max(zu_BRA$Id),format(mean(su_BRA$MV.USD),scientific = TRUE),format(median(su_BRA$MV.USD),scientific = TRUE),format(sum(su_BRA$MV.USD),scientific = TRUE),round(as.double((sum(su_BRA$MV.USD)*100)/sum(deStats$MV.USD)),digits = 2),as.character(min(su_BRA$ym)),as.character(max(su_BRA$ym)))
colnames(BRA)[1] <- "Brazil"
# RUS
wu_RUS <- subset(wu,country.x == "RUS")
zu_RUS <- subset(zu,country.x == "RUS")
su_RUS <- subset(su,country.x == "RUS")
RUS <- rbind(wu_RUS$Id,min(zu_RUS$Id),round(mean(zu_RUS$Id),digits = 2),max(zu_RUS$Id),format(mean(su_RUS$MV.USD),scientific = TRUE),format(median(su_RUS$MV.USD),scientific = TRUE),format(sum(su_RUS$MV.USD),scientific = TRUE),round(as.double((sum(su_RUS$MV.USD)*100)/sum(deStats$MV.USD)),digits = 2),as.character(min(su_RUS$ym)),as.character(max(su_RUS$ym)))
colnames(RUS)[1] <- "Russia"
# IND
wu_IND <- subset(wu,country.x == "IND")
zu_IND <- subset(zu,country.x == "IND")
su_IND <- subset(su,country.x == "IND")
IND <- rbind(wu_IND$Id,min(zu_IND$Id),round(mean(zu_IND$Id),digits = 2),max(zu_IND$Id),format(mean(su_IND$MV.USD),scientific = TRUE),format(median(su_IND$MV.USD),scientific = TRUE),format(sum(su_IND$MV.USD),scientific = TRUE),round(as.double((sum(su_IND$MV.USD)*100)/sum(deStats$MV.USD)),digits = 2),as.character(min(su_IND$ym)),as.character(max(su_IND$ym)))
colnames(IND)[1] <- "India"
# CHN
wu_CHN <- subset(wu,country.x == "CHN")
zu_CHN <- subset(zu,country.x == "CHN")
su_CHN <- subset(su,country.x == "CHN")
CHN <- rbind(wu_CHN$Id,min(zu_CHN$Id),round(mean(zu_CHN$Id),digits = 2),max(zu_CHN$Id),format(mean(su_CHN$MV.USD),scientific = TRUE),format(median(su_CHN$MV.USD),scientific = TRUE),format(sum(su_CHN$MV.USD),scientific = TRUE),round(as.double((sum(su_CHN$MV.USD)*100)/sum(deStats$MV.USD)),digits = 2),as.character(min(su_CHN$ym)),as.character(max(su_CHN$ym)))
colnames(CHN)[1] <- "China"
# one data frame
descriptive_statistics <- cbind(BRIC_descriptiveStats,BRA,RUS,IND,CHN)
rownames(descriptive_statistics)[1:10] <- rbind("Total no. firms","Min no. firms","Mean no. firms","Max no. firms","Mean size in USD","Median size in USD","Total size in USD","% of total size","Start ym","End ym")
descriptive_statistics <- as.data.frame(descriptive_statistics)
library("writexl")
save(descriptive_statistics,file = "descriptive_statistics.RData")
write_xlsx(descriptive_statistics,"descriptive_statistics.xlsx")
xtable(descriptive_statistics)
xtable(descriptive_statistics)
